# DexGuard, version 9.10.1
-injars /Users/muhammad.alfauzan/Development/Dicoding/app/release/app-release.apk
-outjars /Users/muhammad.alfauzan/Development/Dicoding/app/release/app-release-protected.apk

-libraryjars /Users/muhammad.alfauzan/Library/Android/sdk/platforms/android-35/android.jar

-logfile /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/debugging/apk/release/build.log

-printmaindexlist /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/mapping/apk/release/maindexlist.txt
-dontcompress **.3G2,**.3GP,**.3GPP,**.3GPP2,**.3g2,**.3gp,**.3gpp,**.3gpp2,**.AAC,**.AMR,**.APK,**.AWB,**.GIF,**.IMY,**.JAR,**.JET,**.JPEG,**.JPG,**.M4A,**.M4V,**.MID,**.MIDI,**.MKV,**.MOV,**.MP2,**.MP3,**.MP4,**.MPEG,**.MPG,**.OGG,**.PNG,**.RTTTL,**.SMF,**.TFLITE,**.WAV,**.WEBM,**.WEBP,**.WMA,**.WMV,**.XMF,**.ZIP,**.aac,**.amr,**.apk,**.awb,**.gif,**.imy,**.jar,**.jet,**.jpeg,**.jpg,**.m4a,**.m4v,**.mid,**.midi,**.mkv,**.mov,**.mp2,**.mp3,**.mp4,**.mpeg,**.mpg,**.ogg,**.png,**.rtttl,**.smf,**.tflite,**.wav,**.webm,**.webp,**.wma,**.wmv,**.xmf,**.zip,META-INF/androidx.activity_activity-ktx.version,META-INF/androidx.activity_activity.version,META-INF/androidx.annotation_annotation-experimental.version,META-INF/androidx.appcompat_appcompat-resources.version,META-INF/androidx.appcompat_appcompat.version,META-INF/androidx.cardview_cardview.version,META-INF/androidx.constraintlayout_constraintlayout.version,META-INF/androidx.coordinatorlayout_coordinatorlayout.version,META-INF/androidx.core_core-ktx.version,META-INF/androidx.core_core-viewtree.version,META-INF/androidx.core_core.version,META-INF/androidx.cursoradapter_cursoradapter.version,META-INF/androidx.customview_customview.version,META-INF/androidx.databinding_viewbinding.version,META-INF/androidx.datastore_datastore-core.version,META-INF/androidx.datastore_datastore-preferences-core.version,META-INF/androidx.datastore_datastore-preferences.version,META-INF/androidx.datastore_datastore.version,META-INF/androidx.documentfile_documentfile.version,META-INF/androidx.drawerlayout_drawerlayout.version,META-INF/androidx.dynamicanimation_dynamicanimation.version,META-INF/androidx.emoji2_emoji2-views-helper.version,META-INF/androidx.emoji2_emoji2.version,META-INF/androidx.exifinterface_exifinterface.version,META-INF/androidx.fragment_fragment-ktx.version,META-INF/androidx.fragment_fragment.version,META-INF/androidx.interpolator_interpolator.version,META-INF/androidx.legacy_legacy-support-core-utils.version,META-INF/androidx.lifecycle_lifecycle-livedata-core-ktx.version,META-INF/androidx.lifecycle_lifecycle-livedata-core.version,META-INF/androidx.lifecycle_lifecycle-livedata-ktx.version,META-INF/androidx.lifecycle_lifecycle-livedata.version,META-INF/androidx.lifecycle_lifecycle-process.version,META-INF/androidx.lifecycle_lifecycle-runtime-ktx.version,META-INF/androidx.lifecycle_lifecycle-runtime.version,META-INF/androidx.lifecycle_lifecycle-viewmodel-ktx.version,META-INF/androidx.lifecycle_lifecycle-viewmodel-savedstate.version,META-INF/androidx.lifecycle_lifecycle-viewmodel.version,META-INF/androidx.loader_loader.version,META-INF/androidx.localbroadcastmanager_localbroadcastmanager.version,META-INF/androidx.navigation_navigation-common.version,META-INF/androidx.navigation_navigation-fragment-ktx.version,META-INF/androidx.navigation_navigation-fragment.version,META-INF/androidx.navigation_navigation-runtime.version,META-INF/androidx.navigation_navigation-ui-ktx.version,META-INF/androidx.navigation_navigation-ui.version,META-INF/androidx.print_print.version,META-INF/androidx.profileinstaller_profileinstaller.version,META-INF/androidx.recyclerview_recyclerview.version,META-INF/androidx.savedstate_savedstate-ktx.version,META-INF/androidx.savedstate_savedstate.version,META-INF/androidx.slidingpanelayout_slidingpanelayout.version,META-INF/androidx.startup_startup-runtime.version,META-INF/androidx.tracing_tracing.version,META-INF/androidx.transition_transition.version,META-INF/androidx.vectordrawable_vectordrawable-animated.version,META-INF/androidx.vectordrawable_vectordrawable.version,META-INF/androidx.versionedparcelable_versionedparcelable.version,META-INF/androidx.viewpager2_viewpager2.version,META-INF/androidx.viewpager_viewpager.version,META-INF/androidx.window_window.version,META-INF/com.google.android.material_material.version,META-INF/kotlinx_coroutines_android.version,META-INF/kotlinx_coroutines_core.version,RESOURCES.ARSC,assets/dexopt/baseline.prof,assets/dexopt/baseline.profm,lib/arm64-v8a/libdatastore_shared_counter.so,lib/armeabi-v7a/libdatastore_shared_counter.so,lib/x86/libdatastore_shared_counter.so,lib/x86_64/libdatastore_shared_counter.so,okhttp3/internal/publicsuffix/publicsuffixes.gz,res/-6.webp,res/-B.png,res/-N.png,res/0c.9.png,res/0x.9.png,res/1I.9.png,res/1J.9.png,res/1e.9.png,res/2K.9.png,res/2P.png,res/2d.png,res/33.9.png,res/3u.9.png,res/42.9.png,res/49.png,res/4k.png,res/5D.9.png,res/5U.png,res/5c.png,res/62.9.png,res/65.9.png,res/6t.png,res/7C.9.png,res/7I.9.png,res/7_.9.png,res/7i.png,res/7o.9.png,res/84.png,res/8h.9.png,res/8h.png,res/9N.9.png,res/9X.9.png,res/9n.9.png,res/9z.png,res/BG.9.png,res/BL.9.png,res/BM.png,res/CK.9.png,res/C_.9.png,res/DL.9.png,res/D_.9.png,res/EA.9.png,res/EP.png,res/FW.png,res/G2.9.png,res/Gf.png,res/Gt.9.png,res/H-.png,res/IX.9.png,res/JJ.9.png,res/KH.9.png,res/KM.png,res/K_.9.png,res/Li.9.png,res/MF.9.png,res/MO.webp,res/MQ.png,res/Ma.9.png,res/NA.9.png,res/NG.png,res/NZ.9.png,res/Nk.9.png,res/No.9.png,res/Pa.9.png,res/Pb.png,res/Pg.9.png,res/QJ.9.png,res/RV.png,res/SV.9.png,res/Sn.webp,res/Su.9.png,res/Th.png,res/Tj.9.png,res/U-.9.png,res/UE.9.png,res/UR.png,res/W4.9.png,res/Wh.png,res/Wr.png,res/Wz.png,res/X3.9.png,res/X4.9.png,res/Y7.9.png,res/YG.9.png,res/Yt.9.png,res/Yw.9.png,res/Z8.png,res/ZN.9.png,res/_q.png,res/aU.9.png,res/ar.png,res/bX.9.png,res/d2.webp,res/d3.png,res/d5.9.png,res/dW.png,res/dY.png,res/eR.png,res/eT.9.png,res/ej.9.png,res/ev.9.png,res/fM.9.png,res/fq.webp,res/g-.png,res/gK.9.png,res/gZ.9.png,res/gj.9.png,res/gt.9.png,res/h7.9.png,res/hZ.9.png,res/hh.9.png,res/i6.9.png,res/iO.png,res/iR.9.png,res/io.9.png,res/j4.png,res/jS.9.png,res/jS1.9.png,res/jW.png,res/j_.webp,res/je.9.png,res/kJ.9.png,res/kp.png,res/lP.9.png,res/ly.png,res/m0.png,res/mm.9.png,res/nI.9.png,res/nf.png,res/o9.9.png,res/o_.9.png,res/o_.png,res/op.9.png,res/pY.png,res/pk.png,res/ps.9.png,res/pu.png,res/py.9.png,res/qD.9.png,res/qp.png,res/qs.webp,res/rj.9.png,res/s0.png,res/s3.9.png,res/s4.png,res/sA.9.png,res/sK.webp,res/sg.9.png,res/tG.png,res/tS.png,res/tU.9.png,res/tZ.9.png,res/te.png,res/u3.png,res/u5.webp,res/uL.9.png,res/uj.9.png,res/ut.9.png,res/uu.9.png,res/v4.9.png,res/vL.9.png,res/vz.9.png,res/wL.9.png,res/wN.9.png,res/w_.png,res/x3.9.png,res/xH.png,res/xR.9.png,res/xa.9.png,res/yH.9.png,res/yY.9.png,res/yg.9.png,res/yw.webp,res/z-.9.png,res/z9.9.png,res/zE.png,res/zV.9.png,resources.arsc
-zipalign 4
-forceprocessing
-printusage /Users/muhammad.alfauzan/Development/Dicoding/app/buildLog/usage.txt
-printresourceusage /Users/muhammad.alfauzan/Development/Dicoding/app/buildLog/resourceusage.txt
-optimizations !resource/deduplication,!resource/compaction,!class/unboxing/enum,!resource/deduplication,!resource/compaction,!class/unboxing/enum
-optimizationpasses 2
-allowaccessmodification
-printmapping /Users/muhammad.alfauzan/Development/Dicoding/app/buildLog/mapping.txt
-printresourcefilenamemapping /Users/muhammad.alfauzan/Development/Dicoding/app/buildLog/esourcefilenamemapping.txt
-printresourcemapping /Users/muhammad.alfauzan/Development/Dicoding/app/buildLog/resourcemapping.txt
-printclassencryption /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/mapping/apk/release/classencryption.txt
-printstringencryption /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/mapping/apk/release/stringencryption.txt
-printassetencryption /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/mapping/apk/release/assetencryption.txt
-printresourceencryption /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/mapping/apk/release/resourceencryption.txt
-printnativelibraryencryption /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/mapping/apk/release/nativelibraryencryption.txt
-printflutterlogs /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/mapping/apk/release
-printbitguardlogs /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/mapping/apk/release/bitguard_logs
-printinjectmapping /Users/muhammad.alfauzan/Development/Dicoding/app/buildLog/injectmapping.txt
-printthreatcastmapping /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/mapping/apk/release/threatcast-mapping.yml
-obfuscationdictionary <keptnames>
-classobfuscationdictionary <keptnames>

-distinctclassmembernames class * extends com.facebook.react.bridge.NativeModule {
    @com.facebook.react.bridge.ReactMethod
    <fields>;    @com.facebook.react.bridge.ReactMethod
    <methods>;
}
-keeppackagenames org.apache.cordova,org.apache.cordova
-repackageclasses o
-keepattributes RuntimeVisibleAnnotations,RuntimeVisible*Annotation*,*Annotation*,AnnotationDefault,RuntimeVisibleAnnotations,RuntimeVisibleParameterAnnotations,RuntimeVisibleTypeAnnotations,Signature,InnerClasses,EnclosingMethod,RuntimeVisibleAnnotations,RuntimeVisibleParameterAnnotations,RuntimeVisibleAnnotations,AnnotationDefault,RuntimeVisibleAnnotations,AnnotationDefault,RuntimeVisibleAnnotations,AnnotationDefault,RuntimeVisible*Annotation*,AnnotationDefault,Signature,InnerClasses,EnclosingMethod,SourceFile,LineNumberTable,NestHost,NestMembers,RuntimeVisible*Annotation*,AnnotationDefault,Signature,InnerClasses,EnclosingMethod,SourceFile,LineNumberTable,NestHost,NestMembers
-renamesourcefileattribute ''

# @EncryptClass specifies to encrypt the annotated class.
-encryptclasses @com.guardsquare.dexguard.annotation.EncryptClass class *

-encryptclasses class com.guardsquare.dexguard.runtime.**

# @EncryptClass specifies to encrypt the annotated class.
-encryptclasses @com.guardsquare.dexguard.annotation.EncryptClass class *

-encryptclasses class com.guardsquare.dexguard.runtime.**

-encryptclasses class com.example.androidfundamental.data.remote.retrofit.**

-encryptclasses class com.example.androidfundamental.data.local.entity.**

-encryptclasses class com.example.androidfundamental.utils.**

# @EncryptString specifies to encrypt the annotated string constants.
-encryptstrings class * {
    @com.guardsquare.dexguard.annotation.EncryptString
    final java.lang.String *;}

# @EncryptStrings specifies to encrypt all string constants found in the
# annotated class or method.
-encryptstrings @com.guardsquare.dexguard.annotation.EncryptStrings class *

-encryptstrings class * {
    @com.guardsquare.dexguard.annotation.EncryptStrings
    <init>(...);
    @com.guardsquare.dexguard.annotation.EncryptStrings
    <methods>;
}

# @EncryptString specifies to encrypt the annotated string constants.
-encryptstrings class * {
    @com.guardsquare.dexguard.annotation.EncryptString
    final java.lang.String *;}

# @EncryptStrings specifies to encrypt all string constants found in the
# annotated class or method.
-encryptstrings @com.guardsquare.dexguard.annotation.EncryptStrings class *

-encryptstrings class * {
    @com.guardsquare.dexguard.annotation.EncryptStrings
    <init>(...);
    @com.guardsquare.dexguard.annotation.EncryptStrings
    <methods>;
}
-adaptclassstrings io.fabric.sdk.android.services.common.AdvertisingInfoReflectionStrategy,com.mopub.common.GpsHelper,com.localytics.android.DatapointHelper,org.apache.commons.logging.LogFactory,io.fabric.sdk.android.services.common.AdvertisingInfoReflectionStrategy,com.mopub.common.GpsHelper,com.localytics.android.DatapointHelper,org.apache.commons.logging.LogFactory
-adaptresourcefilecontents AndroidManifest.xml,*/manifest/AndroidManifest.xml,resources.arsc,*/resources.arsc,resources.pb,*/resources.pb,META-INF/services/com.couchbase.lite.*,assets/logback*.xml,javamail.default.providers,javamail.*.provider,!lib/*/libMSO*.so,!lib/*/libNativeMorphoSmartSDK_*.so,dummyfilename,!res/raw**,res/**.xml,lib/**.so,*/lib/**.so,AndroidManifest.xml,*/manifest/AndroidManifest.xml,resources.arsc,*/resources.arsc,resources.pb,*/resources.pb,META-INF/services/com.couchbase.lite.*,assets/logback*.xml,javamail.default.providers,javamail.*.provider,!lib/*/libMSO*.so,!lib/*/libNativeMorphoSmartSDK_*.so,dummyfilename,!res/raw**,res/**.xml,lib/**.so,*/lib/**.so
-stripnativelibrarysections AndroidManifest.xml,*/manifest/AndroidManifest.xml,resources.arsc,*/resources.arsc,resources.pb,*/resources.pb,META-INF/services/com.couchbase.lite.*,assets/logback*.xml,javamail.default.providers,javamail.*.provider,!lib/*/libMSO*.so,!lib/*/libNativeMorphoSmartSDK_*.so,dummyfilename,!res/raw**,res/**.xml,lib/**.so,*/lib/**.so,AndroidManifest.xml,*/manifest/AndroidManifest.xml,resources.arsc,*/resources.arsc,resources.pb,*/resources.pb,META-INF/services/com.couchbase.lite.*,assets/logback*.xml,javamail.default.providers,javamail.*.provider,!lib/*/libMSO*.so,!lib/*/libNativeMorphoSmartSDK_*.so,dummyfilename,!res/raw**,res/**.xml,lib/**.so,*/lib/**.so
-resourcefilenameobfuscationdictionary jar:file:/Users/muhammad.alfauzan/Development/DexGuard/DexGuard-9.10.1/lib/dexguard.jar!/lib/empty.txt
-keepresourcexmlattributenames manifest/installLocation,manifest/versionCode,manifest/application/icon,manifest/activity-alias/icon,manifest/application/extractNativeLibs,manifest/application/*/intent-filter/*/name,ContactsSource/ContactsDataKind/*,ContactsAccountType/ContactsDataKind/*,manifest/application/*/exported,manifest/targetSandboxVersion,manifest/application/meta-data/name,manifest/application/meta-data/value,manifest/application/activity/name,manifest/application/activity/splitName,manifest/application/activity/meta-data/name,manifest/application/activity/meta-data/value,manifest/application/activity/intent-filter/order,manifest/application/activity/intent-filter/autoVerify,manifest/application/activity/intent-filter/data/*,manifest/uses-split/name,**/isolatedSplits,vector/**,set/*,**/set/*,objectAnimator/*,animator/*,**/objectAnimator/*,**/animator/*,alpha/*,scale/*,translate/*,rotate/*,**/alpha/*,**/scale/*,**/translate/*,**/rotate/*,*Interpolator/*,animation-list/item/*,MotionScene/**,manifest/queries/package/name,manifest/queries/intent/action/name,manifest/queries/intent/category/name,manifest/queries/intent/data/mimeType,manifest/queries/intent/data/scheme,manifest/queries/intent/data/host,manifest/queries/provider/authorities,manifest/**/hasCode,**pl.droidsonroids.gif.GifImageView/*,restrictions/restriction/**,gradient/**,manifest/installLocation,manifest/versionCode,manifest/application/icon,manifest/activity-alias/icon,manifest/application/extractNativeLibs,manifest/application/*/intent-filter/*/name,ContactsSource/ContactsDataKind/*,ContactsAccountType/ContactsDataKind/*,manifest/application/*/exported,manifest/targetSandboxVersion,manifest/application/meta-data/name,manifest/application/meta-data/value,manifest/application/activity/name,manifest/application/activity/splitName,manifest/application/activity/meta-data/name,manifest/application/activity/meta-data/value,manifest/application/activity/intent-filter/order,manifest/application/activity/intent-filter/autoVerify,manifest/application/activity/intent-filter/data/*,manifest/uses-split/name,**/isolatedSplits,vector/**,set/*,**/set/*,objectAnimator/*,animator/*,**/objectAnimator/*,**/animator/*,alpha/*,scale/*,translate/*,rotate/*,**/alpha/*,**/scale/*,**/translate/*,**/rotate/*,*Interpolator/*,animation-list/item/*,MotionScene/**,manifest/queries/package/name,manifest/queries/intent/action/name,manifest/queries/intent/category/name,manifest/queries/intent/data/mimeType,manifest/queries/intent/data/scheme,manifest/queries/intent/data/host,manifest/queries/provider/authorities,manifest/**/hasCode,**pl.droidsonroids.gif.GifImageView/*,restrictions/restriction/**,gradient/**
-encryptnativelibraries */lib/**/libhermes-support.so,lib/**/libhermes-support.so
-encryptnativelibraries */lib/**/libhermes-support.so,lib/**/libhermes-support.so
-printnatificationmapping /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/mapping/apk/release/natificationmapping.txt
-dontpreverify
-android
-dalvik
-printcodepushmapping /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/mapping/apk/release/codepushmapping.txt
-apksignatureschemes v1,v2
-verbose
-dontnote kotlinx.serialization.**,kotlinx.serialization.**,kotlinx.serialization.**,com.guardsquare.dexguard.runtime.profiling.**,com.guardsquare.dexguard.attestation.**,com.guardsquare.dexguard.injectedcode.**,android.app.backup.BackupAgent,android.view.ActionProvider,android.webkit.JavascriptInterface,android.support.**,android.arch.lifecycle.AndroidViewModel,com.google.android.material.card.MaterialCardView,kotlin.jvm.internal.Intrinsics,kotlin.internal.PlatformImplementationsKt,kotlin.reflect.jvm.internal.**,kotlinx.coroutines.internal.**,com.google.android.gms.**,com.google.android.datatransport.cct.CctBackendFactory,com.google.firebase.**,io.fabric.sdk.android.services.common.AdvertisingInfoReflectionStrategy,com.mopub.common.GpsHelper,com.localytics.android.DatapointHelper,com.android.vending.licensing.ILicensingService,com.google.ads.mediation.admob.AdMobAdapter,com.google.ads.mediation.AdUrlAdapter,com.google.ads.mediation.MediationServerParameters$Parameter,com.google.ads.mediation.MediationAdapter,com.google.ads.mediation.customevent.CustomEvent,com.amazon.device.ads.AdActivity,sun.misc.Unsafe,com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator,com.google.inject.Provider,com.google.inject.Inject,roboguice.event.Observes,roboguice.activity.event.OnCreateEvent,roboguice.inject.SharedPreferencesProvider$PreferencesNameHolder,com.google.inject.internal.util.$Finalizer,com.google.inject.internal.util.$FinalizableReference,com.google.inject.Module,dagger.Lazy,retrofit.http.RestMethod,retrofit2.Platform,retrofit2.Platform$IOS$MainThreadExecutor,rx.internal.util.atomic.LinkedQueueNode,com.actionbarsherlock.internal.nineoldandroids.animation.*,com.actionbarsherlock.ActionBarSherlock,com.actionbarsherlock.view.ActionProvider,com.sun.jna.Library,com.sun.jna.Callback,com.sun.jna.**,com.facebook.proguard.annotations.DoNotStrip,com.facebook.proguard.annotations.KeepGettersAndSetters,com.facebook.android.crypto.keychain.SecureRandomFix,com.facebook.crypto.proguard.annotations.DoNotStrip,com.facebook.crypto.proguard.annotations.KeepGettersAndSetters,com.facebook.jni.HybridData,com.facebook.common.internal.DoNotStrip,io.card.**,org.greenrobot.eventbus.Subscribe,org.greenrobot.eventbus.ThreadMode,org.greenrobot.eventbus.util.ThrowableFailureEvent,com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper,com.j256.ormlite.field.DatabaseFieldConfig,com.j256.ormlite.dao.Dao,com.j256.ormlite.android.AndroidLog,com.j256.ormlite.table.DatabaseTable,com.j256.ormlite.field.DatabaseField,com.j256.ormlite.field.ForeignCollectionField,org.joda.time.DateTime,net.danlew.android.joda.R$raw,com.couchbase.**,org.ektorp.support.CouchDbDocument,com.google.api.client.util.Key,com.google.api.client.util.Value,com.google.api.client.util.NullValue,com.google.api.client.util.GenericData,com.google.api.client.util.Data,com.google.api.client.util.Types,com.google.gdata.model.*,org.codehaus.jackson.**,org.codehaus.jackson.annotate.JsonAutoDetect,ch.qos.logback.**,io.fabric.sdk.android.Kit,com.facebook.model.GraphObject,com.facebook.soloader.SysUtil$LollipopSysdeps,com.tapjoy.**,org.json.JSONObject,net.sqlcipher.**,info.guardianproject.libcore.**,info.guardianproject.iocipher.**,javax.mail.*,org.apache.cordova.NativeToJsMessageQueue$PrivateApiBridgeMode,com.squareup.okhttp.internal.Platform,org.apache.cordova.App,org.apache.cordova.api.CordovaPlugin,org.apache.cordova.CordovaPlugin,com.phonegap.api.Plugin,org.apache.cordova.CordovaWebViewEngine,org.xwalk.core.JavascriptInterface,com.badlogic.gdx.graphics.**,com.badlogic.gdx.Application,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.scenes.scene2d.ui.ImageButton,com.badlogic.gdx.backends.android.AndroidGL20,com.badlogic.gdx.physics.box2d.Fixture,com.bumptech.glide.module.GlideModule,com.bumptech.glide.module.AppGlideModule,com.bumptech.glide.GeneratedAppGlideModuleImpl,com.bumptech.glide.Glide,com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$**,com.nuance.android.vocalizer.**,com.googlecode.tesseract.android.TessBaseAPI,com.googlecode.eyesfree.textdetect.HydrogenTextDetector$Parameters,veg.mediaplayer.sdk.*,net.sourceforge.zbar.*,pl.droidsonroids.gif.GifImageView,pl.droidsonroids.gif.GifIOException,pl.droidsonroids.gif.GifInfoHandle,android.net.http.HttpResponseCache,android.net.http.Ssl*,org.apache.http.conn.ConnectTimeoutException,org.apache.http.conn.scheme.HostNameResolver,org.apache.http.conn.scheme.LayeredSocketFactory,org.apache.http.conn.scheme.SocketFactory,org.apache.http.params.CoreConnectionPNames,org.apache.http.params.HttpConnectionParams,org.apache.http.params.HttpParams,java8.util.ArraysArrayListSpliterator,java8.util.HMSpliterators*,java8.util.LBDSpliterator,java8.util.LBQSpliterator,java8.util.concurrent.ForkJoinPool,okhttp3.internal.AndroidPlatform,okhttp3.internal.Platform,com.facebook.react.bridge.JavaScriptModule,com.facebook.react.bridge.NativeModule,com.facebook.react.uimanager.UIProp,com.facebook.react.uimanager.annotations.ReactProp,com.facebook.react.uimanager.annotations.ReactPropGroup,com.facebook.react.bridge.ReactMethod,com.facebook.react.uimanager.annotations.ReactPropertyHolder,com.facebook.react.modules.blob.BlobCollector,com.facebook.react.ReactInstanceManager,com.facebook.react.uimanager.LayoutShadowNode,com.facebook.react.views.progressbar.ProgressBarShadowNode,com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode,com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode,com.facebook.react.views.text.ReactTextInlineImageShadowNode,com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode,com.facebook.react.views.modal.ModalHostShadowNode,com.facebook.react.views.text.ReactRawTextShadowNode,com.facebook.react.views.text.ReactBaseTextShadowNode,com.facebook.react.views.textinput.ReactTextInputShadowNode,com.facebook.react.views.text.ReactTextShadowNode,com.facebook.react.views.text.ReactVirtualTextShadowNode,expo.modules.core.interfaces.DoNotStrip,expo.modules.kotlin.records.Record,expo.modules.kotlin.sharedobjects.SharedObject,expo.modules.kotlin.types.Enumerable,expo.modules.kotlin.modules.Module,expo.modules.kotlin.modules.ModuleDefinitionData,expo.modules.kotlin.views.ExpoView,expo.modules.kotlin.AppContext,expo.modules.kotlin.viewevent.ViewEventCallback,expo.modules.kotlin.viewevent.ViewEventDelegate,com.zimperium.protobuf.GeneratedMessageLite,com.usabilla.sdk.ubform.UsabillaInternal,com.usabilla.sdk.ubform.telemetry.UbTelemetryRecorder,com.amazonaws.AmazonWebServiceClient,proguard.annotation.*,com.guardsquare.dexguard.annotation.*,androidx.**,androidx.lifecycle.AndroidViewModel,java.lang.AbstractStringBuilder,java.lang.invoke.StringConcatFactory,com.guardsquare.dexguard.rasp.**,com.guardsquare.dexguard.configuration.dexguard-rasp.pro,com.guardsquare.dexguard.runtime.profiling.**,com.guardsquare.dexguard.attestation.**,com.guardsquare.dexguard.injectedcode.**,android.app.backup.BackupAgent,android.view.ActionProvider,android.webkit.JavascriptInterface,android.support.**,android.arch.lifecycle.AndroidViewModel,com.google.android.material.card.MaterialCardView,kotlin.jvm.internal.Intrinsics,kotlin.internal.PlatformImplementationsKt,kotlin.reflect.jvm.internal.**,kotlinx.coroutines.internal.**,com.google.android.gms.**,com.google.android.datatransport.cct.CctBackendFactory,com.google.firebase.**,io.fabric.sdk.android.services.common.AdvertisingInfoReflectionStrategy,com.mopub.common.GpsHelper,com.localytics.android.DatapointHelper,com.android.vending.licensing.ILicensingService,com.google.ads.mediation.admob.AdMobAdapter,com.google.ads.mediation.AdUrlAdapter,com.google.ads.mediation.MediationServerParameters$Parameter,com.google.ads.mediation.MediationAdapter,com.google.ads.mediation.customevent.CustomEvent,com.amazon.device.ads.AdActivity,sun.misc.Unsafe,com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator,com.google.inject.Provider,com.google.inject.Inject,roboguice.event.Observes,roboguice.activity.event.OnCreateEvent,roboguice.inject.SharedPreferencesProvider$PreferencesNameHolder,com.google.inject.internal.util.$Finalizer,com.google.inject.internal.util.$FinalizableReference,com.google.inject.Module,dagger.Lazy,retrofit.http.RestMethod,retrofit2.Platform,retrofit2.Platform$IOS$MainThreadExecutor,rx.internal.util.atomic.LinkedQueueNode,com.actionbarsherlock.internal.nineoldandroids.animation.*,com.actionbarsherlock.ActionBarSherlock,com.actionbarsherlock.view.ActionProvider,com.sun.jna.Library,com.sun.jna.Callback,com.sun.jna.**,com.facebook.proguard.annotations.DoNotStrip,com.facebook.proguard.annotations.KeepGettersAndSetters,com.facebook.android.crypto.keychain.SecureRandomFix,com.facebook.crypto.proguard.annotations.DoNotStrip,com.facebook.crypto.proguard.annotations.KeepGettersAndSetters,com.facebook.jni.HybridData,com.facebook.common.internal.DoNotStrip,io.card.**,org.greenrobot.eventbus.Subscribe,org.greenrobot.eventbus.ThreadMode,org.greenrobot.eventbus.util.ThrowableFailureEvent,com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper,com.j256.ormlite.field.DatabaseFieldConfig,com.j256.ormlite.dao.Dao,com.j256.ormlite.android.AndroidLog,com.j256.ormlite.table.DatabaseTable,com.j256.ormlite.field.DatabaseField,com.j256.ormlite.field.ForeignCollectionField,org.joda.time.DateTime,net.danlew.android.joda.R$raw,com.couchbase.**,org.ektorp.support.CouchDbDocument,com.google.api.client.util.Key,com.google.api.client.util.Value,com.google.api.client.util.NullValue,com.google.api.client.util.GenericData,com.google.api.client.util.Data,com.google.api.client.util.Types,com.google.gdata.model.*,org.codehaus.jackson.**,org.codehaus.jackson.annotate.JsonAutoDetect,ch.qos.logback.**,io.fabric.sdk.android.Kit,com.facebook.model.GraphObject,com.facebook.soloader.SysUtil$LollipopSysdeps,com.tapjoy.**,org.json.JSONObject,net.sqlcipher.**,info.guardianproject.libcore.**,info.guardianproject.iocipher.**,javax.mail.*,org.apache.cordova.NativeToJsMessageQueue$PrivateApiBridgeMode,com.squareup.okhttp.internal.Platform,org.apache.cordova.App,org.apache.cordova.api.CordovaPlugin,org.apache.cordova.CordovaPlugin,com.phonegap.api.Plugin,org.apache.cordova.CordovaWebViewEngine,org.xwalk.core.JavascriptInterface,com.badlogic.gdx.graphics.**,com.badlogic.gdx.Application,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration,com.badlogic.gdx.physics.box2d.World,com.badlogic.gdx.scenes.scene2d.ui.ImageButton,com.badlogic.gdx.backends.android.AndroidGL20,com.badlogic.gdx.physics.box2d.Fixture,com.bumptech.glide.module.GlideModule,com.bumptech.glide.module.AppGlideModule,com.bumptech.glide.GeneratedAppGlideModuleImpl,com.bumptech.glide.Glide,com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$**,com.nuance.android.vocalizer.**,com.googlecode.tesseract.android.TessBaseAPI,com.googlecode.eyesfree.textdetect.HydrogenTextDetector$Parameters,veg.mediaplayer.sdk.*,net.sourceforge.zbar.*,pl.droidsonroids.gif.GifImageView,pl.droidsonroids.gif.GifIOException,pl.droidsonroids.gif.GifInfoHandle,android.net.http.HttpResponseCache,android.net.http.Ssl*,org.apache.http.conn.ConnectTimeoutException,org.apache.http.conn.scheme.HostNameResolver,org.apache.http.conn.scheme.LayeredSocketFactory,org.apache.http.conn.scheme.SocketFactory,org.apache.http.params.CoreConnectionPNames,org.apache.http.params.HttpConnectionParams,org.apache.http.params.HttpParams,java8.util.ArraysArrayListSpliterator,java8.util.HMSpliterators*,java8.util.LBDSpliterator,java8.util.LBQSpliterator,java8.util.concurrent.ForkJoinPool,okhttp3.internal.AndroidPlatform,okhttp3.internal.Platform,com.facebook.react.bridge.JavaScriptModule,com.facebook.react.bridge.NativeModule,com.facebook.react.uimanager.UIProp,com.facebook.react.uimanager.annotations.ReactProp,com.facebook.react.uimanager.annotations.ReactPropGroup,com.facebook.react.bridge.ReactMethod,com.facebook.react.uimanager.annotations.ReactPropertyHolder,com.facebook.react.modules.blob.BlobCollector,com.facebook.react.ReactInstanceManager,com.facebook.react.uimanager.LayoutShadowNode,com.facebook.react.views.progressbar.ProgressBarShadowNode,com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode,com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode,com.facebook.react.views.text.ReactTextInlineImageShadowNode,com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode,com.facebook.react.views.modal.ModalHostShadowNode,com.facebook.react.views.text.ReactRawTextShadowNode,com.facebook.react.views.text.ReactBaseTextShadowNode,com.facebook.react.views.textinput.ReactTextInputShadowNode,com.facebook.react.views.text.ReactTextShadowNode,com.facebook.react.views.text.ReactVirtualTextShadowNode,expo.modules.core.interfaces.DoNotStrip,expo.modules.kotlin.records.Record,expo.modules.kotlin.sharedobjects.SharedObject,expo.modules.kotlin.types.Enumerable,expo.modules.kotlin.modules.Module,expo.modules.kotlin.modules.ModuleDefinitionData,expo.modules.kotlin.views.ExpoView,expo.modules.kotlin.AppContext,expo.modules.kotlin.viewevent.ViewEventCallback,expo.modules.kotlin.viewevent.ViewEventDelegate,com.zimperium.protobuf.GeneratedMessageLite,com.usabilla.sdk.ubform.UsabillaInternal,com.usabilla.sdk.ubform.telemetry.UbTelemetryRecorder,com.amazonaws.AmazonWebServiceClient,proguard.annotation.*,com.guardsquare.dexguard.annotation.*,androidx.**,androidx.lifecycle.AndroidViewModel,java.lang.AbstractStringBuilder,java.lang.invoke.StringConcatFactory,com.guardsquare.dexguard.rasp.**,com.guardsquare.dexguard.configuration.dexguard-rasp.pro
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement,javax.annotation.**,kotlin.Unit,retrofit2.KotlinExtensions,retrofit2.KotlinExtensions$*,javax.annotation.**,org.codehaus.mojo.animal_sniffer.*,okhttp3.internal.platform.**,org.conscrypt.**,org.bouncycastle.**,org.openjsse.**,java.lang.instrument.ClassFileTransformer,sun.misc.SignalHandler,java.lang.instrument.Instrumentation,sun.misc.Signal,java.lang.ClassValue,org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement,java.lang.instrument.ClassFileTransformer,sun.misc.SignalHandler,java.lang.instrument.Instrumentation,sun.misc.Signal,java.lang.ClassValue,org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement,java.lang.instrument.ClassFileTransformer,sun.misc.SignalHandler,java.lang.instrument.Instrumentation,sun.misc.Signal,java.lang.ClassValue,org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement,org.codehaus.mojo.animal_sniffer.*,kotlinx.serialization.internal.ClassValueReferences,kotlinx.serialization.internal.ClassValueReferences,kotlinx.serialization.internal.ClassValueReferences,sun.**,javax.**,java.awt.**,java.nio.file.**,org.apache.**,com.google.errorprone.annotations.**,org.checkerframework.checker.**,com.guardsquare.dexguard.runtime.encryption.EncryptedCordovaWebViewClient,com.guardsquare.dexguard.runtime.encryption.EncryptedSystemWebViewClient,com.guardsquare.dexguard.runtime.encryption.EncryptedXWalkCordovaResourceClient,com.guardsquare.dexguard.runtime.net.SSLPinningEncryptedSystemWebViewClient,com.guardsquare.dexguard.runtime.net.SSLPinningSystemWebViewClient,com.guardsquare.dexguard.runtime.profiling.**,com.guardsquare.dexguard.attestation.**,com.guardsquare.dexguard.injectedcode.**,android.os.SystemProperties,android.renderscript.RenderScript,com.guardsquare.dexguard.runtime.net.SSLPinningWebViewClient,android.support.**.R,android.support.**.R$*,android.support.annotation.Keep,android.support.**Compat*,android.support.**Honeycomb*,android.support.**IceCreamSandwich*,android.support.**JellyBean*,android.support.**Jellybean*,android.support.**JB*,android.support.**KitKat*,android.support.**Kitkat*,android.support.**Lollipop*,android.support.**19,android.support.**20,android.support.**21,android.support.**22,android.support.**23,android.support.**24,android.support.**25,android.support.**Api*,android.support.transition.SceneWrapper,android.support.v*.internal.**,android.support.v*.view.WindowCallbackWrapper,android.support.v*.widget.RoundRectDrawable,android.support.v*.widget.Toolbar,android.app.Notification$Builder,android.annotation.TargetApi,android.support.annotation.RequiresApi,kotlin.coroutines.experimental.intrinsics.IntrinsicsKt**,**$$inlined$*,kotlin.reflect.jvm.internal.**,kotlinx.coroutines.internal.**,com.google.android.gms.**,roboguice.activity.RoboMapActivity,roboguice.test.**,dagger.internal.codegen.*,retrofit.RxSupport*,retrofit.appengine.UrlFetchClient,retrofit2.Platform$Java8,com.sun.jna.CallbackReference,org.codehaus.jackson.map.ext.**,org.crosswalk.**,org.xwalk.**,com.badlogic.gdx.backends.android.AndroidFragmentApplication,com.badlogic.gdx.utils.GdxBuild,com.badlogic.gdx.physics.box2d.utils.Box2DBuild,com.badlogic.gdx.jnigen.**,java.lang.invoke.MethodType,java.lang.invoke.LambdaMetafactory,java.lang.invoke.MethodHandle*,java8.util.DelegatingSpliterator*,java8.util.Spliterators,org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement,proguard.annotation.*,com.guardsquare.dexguard.annotation.*,androidx.**.R,androidx.**.R$*,androidx.annotation.Keep,androidx.**Compat*,androidx.**Honeycomb*,androidx.**IceCreamSandwich*,androidx.**JellyBean*,androidx.**Jellybean*,androidx.**JB*,androidx.**KitKat*,androidx.**Kitkat*,androidx.**Lollipop*,androidx.**19,androidx.**20,androidx.**21,androidx.**22,androidx.**23,androidx.**24,androidx.**25,androidx.**Api*,androidx.transition.SceneWrapper,androidx.**.internal.**,androidx.**.view.WindowCallbackWrapper,androidx.**.widget.RoundRectDrawable,androidx.**.widget.Toolbar,androidx.window.embedding.**,androidx.window.layout.**,android.annotation.TargetApi,androidx.annotation.RequiresApi,org.jacoco.**,java.lang.invoke.StringConcatFactory,com.guardsquare.dexguard.rasp.**,com.guardsquare.dexguard.*.threatcast.**,sun.**,javax.**,java.awt.**,java.nio.file.**,org.apache.**,com.google.errorprone.annotations.**,org.checkerframework.checker.**,com.guardsquare.dexguard.runtime.encryption.EncryptedCordovaWebViewClient,com.guardsquare.dexguard.runtime.encryption.EncryptedSystemWebViewClient,com.guardsquare.dexguard.runtime.encryption.EncryptedXWalkCordovaResourceClient,com.guardsquare.dexguard.runtime.net.SSLPinningEncryptedSystemWebViewClient,com.guardsquare.dexguard.runtime.net.SSLPinningSystemWebViewClient,com.guardsquare.dexguard.runtime.profiling.**,com.guardsquare.dexguard.attestation.**,com.guardsquare.dexguard.injectedcode.**,android.os.SystemProperties,android.renderscript.RenderScript,com.guardsquare.dexguard.runtime.net.SSLPinningWebViewClient,android.support.**.R,android.support.**.R$*,android.support.annotation.Keep,android.support.**Compat*,android.support.**Honeycomb*,android.support.**IceCreamSandwich*,android.support.**JellyBean*,android.support.**Jellybean*,android.support.**JB*,android.support.**KitKat*,android.support.**Kitkat*,android.support.**Lollipop*,android.support.**19,android.support.**20,android.support.**21,android.support.**22,android.support.**23,android.support.**24,android.support.**25,android.support.**Api*,android.support.transition.SceneWrapper,android.support.v*.internal.**,android.support.v*.view.WindowCallbackWrapper,android.support.v*.widget.RoundRectDrawable,android.support.v*.widget.Toolbar,android.app.Notification$Builder,android.annotation.TargetApi,android.support.annotation.RequiresApi,kotlin.coroutines.experimental.intrinsics.IntrinsicsKt**,**$$inlined$*,kotlin.reflect.jvm.internal.**,kotlinx.coroutines.internal.**,com.google.android.gms.**,roboguice.activity.RoboMapActivity,roboguice.test.**,dagger.internal.codegen.*,retrofit.RxSupport*,retrofit.appengine.UrlFetchClient,retrofit2.Platform$Java8,com.sun.jna.CallbackReference,org.codehaus.jackson.map.ext.**,org.crosswalk.**,org.xwalk.**,com.badlogic.gdx.backends.android.AndroidFragmentApplication,com.badlogic.gdx.utils.GdxBuild,com.badlogic.gdx.physics.box2d.utils.Box2DBuild,com.badlogic.gdx.jnigen.**,java.lang.invoke.MethodType,java.lang.invoke.LambdaMetafactory,java.lang.invoke.MethodHandle*,java8.util.DelegatingSpliterator*,java8.util.Spliterators,org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement,proguard.annotation.*,com.guardsquare.dexguard.annotation.*,androidx.**.R,androidx.**.R$*,androidx.annotation.Keep,androidx.**Compat*,androidx.**Honeycomb*,androidx.**IceCreamSandwich*,androidx.**JellyBean*,androidx.**Jellybean*,androidx.**JB*,androidx.**KitKat*,androidx.**Kitkat*,androidx.**Lollipop*,androidx.**19,androidx.**20,androidx.**21,androidx.**22,androidx.**23,androidx.**24,androidx.**25,androidx.**Api*,androidx.transition.SceneWrapper,androidx.**.internal.**,androidx.**.view.WindowCallbackWrapper,androidx.**.widget.RoundRectDrawable,androidx.**.widget.Toolbar,androidx.window.embedding.**,androidx.window.layout.**,android.annotation.TargetApi,androidx.annotation.RequiresApi,org.jacoco.**,java.lang.invoke.StringConcatFactory,com.guardsquare.dexguard.rasp.**,com.guardsquare.dexguard.*.threatcast.**
-ignorewarnings
-protectionreportdirectory /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/reports/apk/release
-printseeds /Users/muhammad.alfauzan/Development/Dicoding/app/buildLog/seeds.txt


-keepresourcefiles AndroidManifest.xml,*/manifest/AndroidManifest.xml,resources.arsc,*/resources.arsc,resources.pb,*/resources.pb,res/raw/*_micro_apk.apk,res/raw/wearable_*.apk,res/xml/actions.xml,lib/**/librealm-jni.so,assets/crashlytics-build.properties,lib/**/libcrashlytics-common.so,lib/**/libcrashlytics-trampoline.so,res/xml/config.xml,res/icon/android/**,res/screen/android/**,lib/**/libgdx*.so,lib/*/libMSO*.so,lib/*/libNativeMorphoSmartSDK_*.so,assets/wlclient.properties,!*/lib/**/libhermes-support.so,!lib/**/libhermes-support.so,dummyfilename,AndroidManifest.xml,*/manifest/AndroidManifest.xml,resources.arsc,*/resources.arsc,resources.pb,*/resources.pb,res/raw/*_micro_apk.apk,res/raw/wearable_*.apk,res/xml/actions.xml,lib/**/librealm-jni.so,assets/crashlytics-build.properties,lib/**/libcrashlytics-common.so,lib/**/libcrashlytics-trampoline.so,res/xml/config.xml,res/icon/android/**,res/screen/android/**,lib/**/libgdx*.so,lib/*/libMSO*.so,lib/*/libNativeMorphoSmartSDK_*.so,assets/wlclient.properties,!*/lib/**/libhermes-support.so,!lib/**/libhermes-support.so,dummyfilename
-keepresources raw/*_micro_apk
-keepresources raw/wearable_*
-keepresources array/android_wear_capabilities
-keepresources integer/google_app_measurement_enable
-keepresources string/google_app_id
-keepresources string/gcm_defaultSenderId
-keepresources string/test_banner_ad_unit_id
-keepresources string/test_interstitial_ad_unit_id
-keepresources string/ga_trackingId
-keepresources bool/ga_autoActivityTracking
-keepresources bool/ga_reportUncaughtExceptions
-keepresources string/google_api_key
-keepresources string/firebase_database_url
-keepresources string/default_web_client_id
-keepresources string/ga_trackingId
-keepresources string/gcm_defaultSenderId
-keepresources string/google_crash_reporting_api_key
-keepresources string/google_storage_bucket
-keepresources string/msg_subscribed
-keepresources string/project_id
-keepresources raw/third_party_licenses
-keepresources raw/third_party_license_metadata
-keepresources id/license
-keepresources id/license_activity_scrollview
-keepresources id/license_activity_textview
-keepresources id/license_list
-keepresources id/no_licenses_text
-keepresources layout/libraries_social_licenses_license
-keepresources layout/libraries_social_licenses_license_activity
-keepresources layout/libraries_social_licenses_license_loading
-keepresources layout/libraries_social_licenses_license_menu_activity
-keepresources layout/license_menu_activity_loading
-keepresources layout/license_menu_no_licenses
-keepresources string/com.crashlytics.android.build_id
-keepresources string/com.google.firebase.crashlytics.mapping_file_id
-keepresources xml/config
-keepresources raw/xwalk
-keepresources raw/icudtl
-keepresources raw/launch_screen_api
-keepresources raw/contacts_api
-keepresources raw/device_capabilities_api
-keepresources raw/messaging_api
-keepresources raw/wifidirect_api
-keepresources array/xwalk_resources_list
-keepresources raw/*_micro_apk
-keepresources raw/wearable_*
-keepresources array/android_wear_capabilities
-keepresources integer/google_app_measurement_enable
-keepresources string/google_app_id
-keepresources string/gcm_defaultSenderId
-keepresources string/test_banner_ad_unit_id
-keepresources string/test_interstitial_ad_unit_id
-keepresources string/ga_trackingId
-keepresources bool/ga_autoActivityTracking
-keepresources bool/ga_reportUncaughtExceptions
-keepresources string/google_api_key
-keepresources string/firebase_database_url
-keepresources string/default_web_client_id
-keepresources string/ga_trackingId
-keepresources string/gcm_defaultSenderId
-keepresources string/google_crash_reporting_api_key
-keepresources string/google_storage_bucket
-keepresources string/msg_subscribed
-keepresources string/project_id
-keepresources raw/third_party_licenses
-keepresources raw/third_party_license_metadata
-keepresources id/license
-keepresources id/license_activity_scrollview
-keepresources id/license_activity_textview
-keepresources id/license_list
-keepresources id/no_licenses_text
-keepresources layout/libraries_social_licenses_license
-keepresources layout/libraries_social_licenses_license_activity
-keepresources layout/libraries_social_licenses_license_loading
-keepresources layout/libraries_social_licenses_license_menu_activity
-keepresources layout/license_menu_activity_loading
-keepresources layout/license_menu_no_licenses
-keepresources string/com.crashlytics.android.build_id
-keepresources string/com.google.firebase.crashlytics.mapping_file_id
-keepresources xml/config
-keepresources raw/xwalk
-keepresources raw/icudtl
-keepresources raw/launch_screen_api
-keepresources raw/contacts_api
-keepresources raw/device_capabilities_api
-keepresources raw/messaging_api
-keepresources raw/wifidirect_api
-keepresources array/xwalk_resources_list
-keepresourcexmlelements 'manifest/**/meta-data@name=android.**','manifest/application/meta-data@name=aia-compat-**','manifest/application/activity/meta-data@name=default-url','manifest/**/meta-data@name=com.sec.android.support.**','manifest/**/meta-data@name=com.samsung.android.sdk.**','manifest/application/meta-data@name=com.google.android.wearable.beta.app','manifest/application/meta-data@name=com.google.android.actions','manifest/**/meta-data@name=com.google.android.gms.version','manifest/application/meta-data@name=com.google.android.gms.wallet.api.enabled','manifest/application/meta-data@name=com.google.android.gms.games.APP_ID','manifest/application/service/meta-data@name=backend:com.google.android.datatransport.cct.CctBackendFactory','manifest/application/service/meta-data@value=cct','manifest/application/service/meta-data@name=com.google.firebase.components:com.google.firebase.**','manifest/application/meta-data@name=com.google.android.geo.API_KEY','manifest/application/meta-data@name=com.google.android.maps.v2.API_KEY','manifest/application/meta-data@value=GlideModule','manifest/application/service/meta-data@value=com.google.firebase.components.ComponentRegistrar','manifest/application/provider/meta-data@name=SupportedSwitchActionType','manifest/application/meta-data@name=com.google.android.play.billingclient.version','manifest/application/provider/meta-data@name=androidx.work.WorkManagerInitializer','manifest/application/provider/meta-data@value=androidx.startup','manifest/**/meta-data@name=android.**','manifest/application/meta-data@name=aia-compat-**','manifest/application/activity/meta-data@name=default-url','manifest/**/meta-data@name=com.sec.android.support.**','manifest/**/meta-data@name=com.samsung.android.sdk.**','manifest/application/meta-data@name=com.google.android.wearable.beta.app','manifest/application/meta-data@name=com.google.android.actions','manifest/**/meta-data@name=com.google.android.gms.version','manifest/application/meta-data@name=com.google.android.gms.wallet.api.enabled','manifest/application/meta-data@name=com.google.android.gms.games.APP_ID','manifest/application/service/meta-data@name=backend:com.google.android.datatransport.cct.CctBackendFactory','manifest/application/service/meta-data@value=cct','manifest/application/service/meta-data@name=com.google.firebase.components:com.google.firebase.**','manifest/application/meta-data@name=com.google.android.geo.API_KEY','manifest/application/meta-data@name=com.google.android.maps.v2.API_KEY','manifest/application/meta-data@value=GlideModule','manifest/application/service/meta-data@value=com.google.firebase.components.ComponentRegistrar','manifest/application/provider/meta-data@name=SupportedSwitchActionType','manifest/application/meta-data@name=com.google.android.play.billingclient.version','manifest/application/provider/meta-data@name=androidx.work.WorkManagerInitializer','manifest/application/provider/meta-data@value=androidx.startup'


-if public class ** extends androidx.navigation.NavArgs

-keepclassmembers public class <1> {
    ** fromBundle(android.os.Bundle);
}

-keep,allowshrinking,allowobfuscation class * extends androidx.navigation.Navigator

-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
    void setProgress(float);
}

-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context,android.util.AttributeSet);
    public <init>();
}

-if class androidx.appcompat.app.AppCompatViewInflater

-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}

-keepclassmembers,allowshrinking,allowobfuscation class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
    <methods>;
}

-keep public class * extends com.bumptech.glide.module.GlideModule

-keep class * extends com.bumptech.glide.module.AppGlideModule {
    <init>(...);
}

-keep public enum  com.bumptech.glide.load.ImageHeaderParser$** {
    **[] $VALUES;    public <fields>;    public <methods>;
}

-keep class com.bumptech.glide.load.data.ParcelFileDescriptorRewinder$InternalRewinder {
    *** rewind();
}

-if public class ** extends androidx.fragment.app.Fragment

-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

-if class androidx.fragment.app.FragmentTransition {
    private static androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl();
}

-keep class androidx.transition.FragmentTransitionSupport {
    public <init>();
}

-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
    androidx.transition.ChangeBounds$ViewBounds mViewBounds;}

-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
    void set*(***);
    *** get*();
}

-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context,android.util.AttributeSet,int,int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}

-keepclassmembers,allowshrinking,allowobfuscation class androidx.core.view.ViewCompat$Api* {
    <methods>;
}

-keepclassmembers,allowshrinking,allowobfuscation class androidx.core.view.WindowInsetsCompat$*Impl* {
    <methods>;
}

-keepclassmembers,allowshrinking,allowobfuscation class androidx.core.app.NotificationCompat$*$Api*Impl {
    <methods>;
}

-keepclassmembers,allowshrinking,allowobfuscation class androidx.core.os.UserHandleCompat$Api*Impl {
    <methods>;
}

-keepclassmembers,allowshrinking,allowobfuscation class androidx.core.widget.EdgeEffectCompat$Api*Impl {
    <methods>;
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

-keepclassmembers enum  androidx.lifecycle.Lifecycle$Event {
    <fields>;}

-keep class * extends androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent
    <fields>;    @androidx.lifecycle.OnLifecycleEvent
    <methods>;
}

-keepclasseswithmembers,allowobfuscation public class androidx.lifecycle.ReportFragment {
    public <init>();
}

-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks {
    <fields>;    <methods>;
}

-keepclassmembers,allowobfuscation class * extends androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks {
    <fields>;    <methods>;
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers class * extends androidx.datastore.preferences.protobuf.GeneratedMessageLite {
    <fields>;}

-keepclassmembers,allowshrinking,allowobfuscation interface  * {
    @retrofit2.http.*
    <methods>;
}

-if interface  * {
    @retrofit2.http.*
    <methods>;
}

-keep,allowobfuscation interface  <1>

-keep,allowshrinking class okhttp3.internal.publicsuffix.PublicSuffixDatabase

-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;}

-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;}

-keep,allowshrinking class kotlinx.coroutines.internal.MainDispatcherFactory

-keep,allowshrinking class kotlinx.coroutines.CoroutineExceptionHandler

-keep class kotlinx.coroutines.android.AndroidDispatcherFactory {
    <fields>;    <methods>;
}

-keep class kotlinx.coroutines.android.AndroidExceptionPreHandler {
    <fields>;    <methods>;
}

-keep class * extends androidx.versionedparcelable.VersionedParcelable

-keep public class android.support.**Parcelizer {
    <fields>;    <methods>;
}

-keep public class androidx.**Parcelizer {
    <fields>;    <methods>;
}

-keep public class androidx.versionedparcelable.ParcelImpl

-if @kotlinx.serialization.Serializable class **

-keepclassmembers class <1> {
    static <1>$Companion Companion;}

-if @kotlinx.serialization.Serializable class ** {
    static **$* *;}

-keepclassmembers class <2>$<3> {
    kotlinx.serialization.KSerializer serializer(...);
}

-if @kotlinx.serialization.Serializable class ** {
    public static ** INSTANCE;}

-keepclassmembers class <1> {
    public static <1> INSTANCE;    kotlinx.serialization.KSerializer serializer(...);
}

-keepclassmembers public class **$$serializer {
    private ** descriptor;}

-if @kotlinx.serialization.Serializable class **

-keep,allowshrinking,allowoptimization,allowobfuscation class <1>

-keep,allowshrinking class * extends androidx.startup.Initializer

-keep class * extends androidx.startup.Initializer {
    <init>();
}

-keep,allowobfuscation @interface  androidx.annotation.Keep

-keep @androidx.annotation.Keep class * {
    <fields>;    <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep
    <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep
    <fields>;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep
    <init>(...);
}

-keepclassmembers,allowobfuscation class * {
    @androidx.annotation.DoNotInline
    <methods>;
}

# com.example.android.apis.animation.ShapeHolder,...
-keepclassmembers class **animation**Holder {
    public *** get*();
    public void set*(***);
}

-keep,allowshrinking !abstract public class * extends android.app.backup.BackupAgent

-keepclassmembers !abstract class !com.google.ads.** extends android.view.View {
    public <init>(android.content.Context);
    public <init>(android.content.Context,android.util.AttributeSet);
    public <init>(android.content.Context,android.util.AttributeSet,int);
    public void set*(...);
}

-keepclassmembers !abstract class * {
    public <init>(android.content.Context,android.util.AttributeSet);
    public <init>(android.content.Context,android.util.AttributeSet,int);
}

# Keep onClick handlers for Views and MenuItems as defined in resource xml files.
-keepclassmembers class * extends android.content.Context {
    public void *(android.view.View);
    public *** *(android.view.MenuItem);
}

-keepclassmembers class * extends android.view.ActionProvider {
    public <init>(android.content.Context);
}

-keepclassmembers class * extends android.os.Parcelable {
    static ** CREATOR;}

-keepclassmembers class * {
    @android.webkit.JavascriptInterface
    <methods>;
}

-keep class android.support.v*.renderscript.RenderScript {
    <fields>;    <methods>;
}

-keep @android.support.annotation.Keep class *

-keepclassmembers class * {
    @android.support.annotation.Keep
    <fields>;    @android.support.annotation.Keep
    <methods>;
}

# Avoid merging and inlining compatibility classes.
-keep,allowshrinking,allowobfuscation class android.support.**Compat*,android.support.**Honeycomb*,android.support.**IceCreamSandwich*,android.support.**JellyBean*,android.support.**Jellybean*,android.support.**JB*,android.support.**KitKat*,android.support.**Kitkat*,android.support.**Lollipop*,android.support.**19,android.support.**20,android.support.**21,android.support.**22,android.support.**23,android.support.**24,android.support.**25,android.support.**Api* {
    <fields>;    <methods>;
}

# Support theme definition.
-keep class android.support.v7.app.AppCompatViewInflater

-keep,allowshrinking,allowobfuscation @android.annotation.TargetApi class android.support.** {
    <fields>;    <methods>;
}

-keep,allowshrinking,allowobfuscation @android.support.annotation.RequiresApi class android.support.** {
    <fields>;    <methods>;
}

-keepclassmembers class * extends android.arch.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
    <init>(android.app.Application,...);
}

# Design support library.
-keep,allowshrinking class android.support.design.widget.CoordinatorLayout

-keep !abstract class android.support.design.widget.* extends android.support.design.widget.CoordinatorLayout$Behavior {
    <init>(android.content.Context,android.util.AttributeSet);
}

# Wear/wearable support library.
-keep,allowshrinking,allowobfuscation class android.support.wear.ambient.SharedLibraryVersion* {
    <fields>;    <methods>;
}

-keep,allowshrinking,allowobfuscation class android.support.wearable.internal.SharedLibraryVersion* {
    <fields>;    <methods>;
}

# Multidex support library, prevent class merging.
-keep,allowshrinking,allowobfuscation class android.support.multidex.**

# Signature optimized with class from API level 19 or higher.
-keep,allowshrinking,allowobfuscation class android.support.v4.app.FragmentState$InstantiationException {
    <init>(...);
}

-keep,allowshrinking,allowobfuscation class android.support.v4.app.Fragment$InstantiationException {
    <init>(...);
}

# Fields accessed before initialization.
-keepclassmembers,allowshrinking,allowobfuscation class android.support.**,com.google.android.gms.**.internal.** {
    !static final <fields>;}

-keepclassmembers,allowshrinking,allowobfuscation class com.google.android.material.card.MaterialCardView {
    !static <fields>;}

-keepclassmembers,includecode,allowshrinking,allowobfuscation class kotlin.jvm.internal.Intrinsics {
    void throwNpe();
}

# Kotlin reflect library
-keep interface  kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader

-keep class * extends kotlin.reflect.jvm.internal.impl.builtins.BuiltInsLoader {
    public protected <fields>;    public protected <methods>;
}

-keep interface  kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition

-keep class * extends kotlin.reflect.jvm.internal.impl.resolve.ExternalOverridabilityCondition {
    public protected <fields>;    public protected <methods>;
}

# Sensitive classes.
-keep,includecode,allowshrinking,allowobfuscation class com.google.android.gms.**.z* {
    <fields>;    <methods>;
}

# External reflection.
-keep,allowshrinking class com.google.android.gms.iid.MessengerCompat,com.google.android.gms.location.ActivityRecognitionResult,com.google.android.gms.maps.GoogleMapOptions

# Internal reflection.
-keep,allowshrinking class com.google.android.gms.ads.AdActivity,com.google.android.gms.ads.purchase.InAppPurchaseActivity,com.google.android.gms.gcm.GoogleCloudMessaging,com.google.android.gms.location.places.*Api

# Descriptors.
#   com.google.android.gms.iid.InstanceID,
#   com.google.android.gms.**.I*Callbacks,
#   com.google.android.gms.**.I*Callback,
#   com.google.android.gms.**.I*Delegate,
#   com.google.android.gms.**.I*Service,
-keepclassmembers class com.google.android.gms.common.internal.safeparcel.SafeParcelable {
    public static final java.lang.String NULL;}

-keep,allowshrinking @com.google.android.gms.common.annotation.KeepName class *

-keepclassmembers,allowshrinking class * {
    @com.google.android.gms.common.annotation.KeepName
    <fields>;    @com.google.android.gms.common.annotation.KeepName
    <methods>;
}

-keep class com.google.android.gms.tagmanager.TagManagerService

-keep class com.google.android.gms.measurement.AppMeasurement

-keep class com.google.android.gms.measurement.AppMeasurementReceiver

-keep class com.google.android.gms.measurement.AppMeasurementService

-keep class com.google.android.datatransport.cct.CctBackendFactory {
    <fields>;    <methods>;
}

-keep class com.google.firebase.FirebaseApp

-keep class com.google.firebase.auth.FirebaseAuth

-keep class com.google.firebase.crash.FirebaseCrash

-keep class com.google.firebase.database.connection.idl.IPersistentConnectionImpl

-keep class com.google.firebase.iid.FirebaseInstanceId

-keep,allowshrinking,allowoptimization class com.google.firebase.components.ComponentRegistrar

-keep class com.google.firebase.analytics.FirebaseAnalytics {
    <fields>;    <methods>;
}

-keep class com.google.firebase.provider.FirebaseInitProvider

-keep class com.google.android.gms.measurement.AppMeasurement*Service

-keep class com.google.android.gms.measurement.AppMeasurement*Receiver

# Google Play Services Ads, with io.fabric, Mopub, and Localytics.
-keep,allowobfuscation class com.google.android.gms.ads.identifier.AdvertisingIdClient,com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,com.google.android.gms.common.GooglePlayServicesUtil

-keepclassmembers class com.google.android.gms.ads.identifier.AdvertisingIdClient,com.google.android.gms.ads.identifier.AdvertisingIdClient$Info,com.google.android.gms.common.GooglePlayServicesUtil {
    public <methods>;
}

-keep,allowobfuscation public class com.android.vending.licensing.ILicensingService

# Google Play market expansion downloader.
-keepclassmembers public class com.google.android.vending.expansion.downloader.impl.DownloadsDB$* {
    public static final java.lang.String[][] SCHEMA;    public static final java.lang.String TABLE_NAME;}

# Google Cloud Messaging.
-keep,allowshrinking class **.GCMIntentService

# Google GMS
-keep,includecode class ** extends com.google.android.gms.dynamic.IObjectWrapper {
    <fields>;    <methods>;
}

# AdMob (based on Google Play Services).
-keep,allowshrinking class com.google.android.gms.ads.AdActivity

-keep,allowshrinking class com.google.ads.mediation.admob.AdMobAdapter

-keep,allowshrinking class com.google.ads.mediation.AdUrlAdapter

-keepclassmembers,allowobfuscation class * {
    @com.google.ads.mediation.MediationServerParameters$Parameter
    java.lang.String *;}

-keep !interface  * extends com.google.ads.mediation.MediationAdapter

-keep !interface  * extends com.google.ads.mediation.customevent.CustomEvent

-keep,allowshrinking class com.amazon.device.ads.AdActivity

-keepclassmembers class com.google.common.primitives.UnsignedBytes$LexicographicalComparatorHolder$UnsafeComparator {
    sun.misc.Unsafe theUnsafe;}

-keep,allowobfuscation class * extends com.google.inject.Provider

-keep,allowobfuscation @interface  javax.inject.** {
    <fields>;    <methods>;
}

-keep,allowobfuscation @interface  com.google.inject.** {
    <fields>;    <methods>;
}

-keep,allowobfuscation @interface  roboguice.** {
    <fields>;    <methods>;
}

-keep,allowobfuscation @interface  com.actionbarsherlock.** {
    <fields>;    <methods>;
}

-keepclassmembers,allowobfuscation class * {
    @javax.inject.**
    <fields>;    @com.google.inject.**
    <fields>;    @roboguice.**
    <fields>;    @com.actionbarsherlock.**
    <fields>;    @dagger.**
    <fields>;    @roboguice.event.Observes
    <methods>;
    @dagger.**
    <methods>;
    @com.google.inject.Inject
    <init>(...);
}

# DGD-1221: allow optimization for default constructors to enable
# side-effect marking for them. The rule was originally part of the rule above
# but it leads to unwanted effects if optimization is disabled for these
# contructors.
-keepclassmembers,allowoptimization,allowobfuscation class * {
    !private <init>();
}

-keep,allowobfuscation class roboguice.activity.event.OnCreateEvent

-keep,allowobfuscation class roboguice.inject.SharedPreferencesProvider$PreferencesNameHolder

-keepclassmembers class com.google.inject.internal.util.$Finalizer {
    public static java.lang.ref.ReferenceQueue startFinalizer(java.lang.Class,java.lang.Object);
}

-keep,allowshrinking class com.google.inject.internal.util.$FinalizableReference

-keepclassmembers class * {
    void finalizeReferent();
}

-keepclassmembers class android.support.v4.app.Fragment {
    public android.view.View getView();
}

-keepclassmembers class android.support.v4.app.FragmentManager {
    public android.support.v4.app.Fragment findFragmentById(int);
    public android.support.v4.app.Fragment findFragmentByTag(java.lang.String);
}

-keepclassmembers class * extends com.google.inject.Module {
    <init>(android.content.Context);
    <init>();
}

-keep class **$$ModuleAdapter

-keep class **$$InjectAdapter

-keep class **$$StaticInjection

-if class **$$ModuleAdapter

-keep class <1>

-if class **$$InjectAdapter

-keep class <1>

-if class **$$StaticInjection

-keep class <1>

-keep,allowshrinking class dagger.Lazy

-keep,allowobfuscation @retrofit.http.RestMethod @interface  *

-keepclassmembers @retrofit.http.RestMethod @interface  * {
    <methods>;
}

-keepclassmembers,includedescriptorclasses,allowshrinking,allowobfuscation interface  * {
    @retrofit.http.**
    <methods>;
}

-keep,allowobfuscation @interface  retrofit2.http.**

-keepclassmembers,includedescriptorclasses,allowshrinking,allowobfuscation interface  * {
    @retrofit2.http.**
    <methods>;
}

-keepclassmembers class rx.internal.util.unsafe.*Queue {
    long producerIndex;    long consumerIndex;    rx.internal.util.atomic.LinkedQueueNode producerNode;    rx.internal.util.atomic.LinkedQueueNode consumerNode;}

# Otto.
-keepclassmembers,allowobfuscation class * {
    @com.squareup.otto.*
    <methods>;
}

-keepclassmembers !abstract class * extends com.actionbarsherlock.ActionBarSherlock {
    <init>(android.app.Activity,int);
}

-keep !abstract class * extends com.actionbarsherlock.view.ActionProvider {
    <init>(android.content.Context);
}

-keep class com.sun.jna.Klass

-keep,allowobfuscation interface  com.sun.jna.Library

-keep,allowobfuscation interface  * extends com.sun.jna.Library

-keep,allowobfuscation interface  * extends com.sun.jna.Callback

-keepclassmembers interface  * extends com.sun.jna.Library {
    <methods>;
}

-keepclassmembers interface  * extends com.sun.jna.Callback {
    <methods>;
}

-keep class com.sun.jna.CallbackReference {
    void dispose();
    com.sun.jna.Callback getCallback(java.lang.Class,com.sun.jna.Pointer,boolean);
    com.sun.jna.Pointer getFunctionPointer(com.sun.jna.Callback,boolean);
    com.sun.jna.Pointer getNativeString(java.lang.Object,boolean);
    java.lang.ThreadGroup initializeThread(com.sun.jna.Callback,com.sun.jna.CallbackReference$AttachOptions);
}

-keep,includedescriptorclasses class com.sun.jna.Native {
    com.sun.jna.Callback$UncaughtExceptionHandler callbackExceptionHandler;    void dispose();
    java.lang.Object fromNative(com.sun.jna.FromNativeConverter,java.lang.Object,java.lang.reflect.Method);
    com.sun.jna.NativeMapped fromNative(java.lang.Class,java.lang.Object);
    com.sun.jna.NativeMapped fromNative(java.lang.reflect.Method,java.lang.Object);
    java.lang.Class nativeType(java.lang.Class);
    java.lang.Object toNative(com.sun.jna.ToNativeConverter,java.lang.Object);
}

-keep class com.sun.jna.Callback$UncaughtExceptionHandler {
    void uncaughtException(com.sun.jna.Callback,java.lang.Throwable);
}

-keep class com.sun.jna.Native$ffi_callback {
    void invoke(long,long,long);
}

-keep class com.sun.jna.Structure$FFIType$FFITypes {
    <fields>;}

-keep class com.sun.jna.ToNativeConverter {
    java.lang.Class nativeType();
}

-keep class com.sun.jna.NativeMapped {
    java.lang.Object toNative();
}

-keep class com.sun.jna.IntegerType {
    long value;}

-keep class com.sun.jna.PointerType {
    com.sun.jna.Pointer pointer;}

-keep class com.sun.jna.LastErrorException {
    <init>(int);
    <init>(java.lang.String);
}

-keep class com.sun.jna.Pointer {
    long peer;    <init>(long);
}

-keep class com.sun.jna.WString {
    <init>(java.lang.String);
}

-keep class com.sun.jna.Structure {
    long typeInfo;    com.sun.jna.Pointer memory;    <init>(int);
    void autoRead();
    void autoWrite();
    com.sun.jna.Pointer getTypeInfo();
    com.sun.jna.Structure newInstance(java.lang.Class,long);
}

-keep @com.facebook.proguard.annotations.DoNotStrip class *

-keepclassmembers class * {
    @com.facebook.proguard.annotations.DoNotStrip
    <fields>;    @com.facebook.proguard.annotations.DoNotStrip
    <methods>;
}

-keep @com.facebook.proguard.annotations.KeepGettersAndSetters class *

-keepclassmembers class * {
    @com.facebook.proguard.annotations.KeepGettersAndSetters
    <fields>;    @com.facebook.proguard.annotations.KeepGettersAndSetters
    <methods>;
}

-keep @com.facebook.crypto.proguard.annotations.DoNotStrip class *

-keepclassmembers class * {
    @com.facebook.crypto.proguard.annotations.DoNotStrip
    <fields>;    @com.facebook.crypto.proguard.annotations.DoNotStrip
    <methods>;
}

-keepclassmembers @com.facebook.crypto.proguard.annotations.KeepGettersAndSetters class * {
    void set*(***);
    *** get*();
}

-keepclassmembers class * {
    com.facebook.jni.HybridData *;    <init>(com.facebook.jni.HybridData);
}

-keepclasseswithmembers class * {
    com.facebook.jni.HybridData *;}

-keep @com.facebook.common.internal.DoNotStrip class *

-keepclassmembers class * {
    @com.facebook.common.internal.DoNotStrip
    <fields>;    @com.facebook.common.internal.DoNotStrip
    <methods>;
}

-keepclassmembers,allowshrinking class com.facebook.animated.**,com.facebook.imagepipeline.**,com.facebook.webpsupport.** {
    native <methods>;
}

-keep class io.card.payment.CardScanner {
    <fields>;    <methods>;
}

-keep class io.card.payment.DetectionInfo {
    <fields>;    <methods>;
}

-keep class io.card.payment.CreditCard {
    <fields>;    <methods>;
}

# Greenrobot EventBus < V3.
-keepclassmembers class * {
    public void onEvent*(***);
}

-keep,allowobfuscation class org.greenrobot.eventbus.Subscribe {
    <fields>;    <methods>;
}

-keepclassmembers,allowobfuscation class ** {
    @org.greenrobot.eventbus.Subscribe
    <methods>;
}

-keep enum  org.greenrobot.eventbus.ThreadMode {
    <fields>;    <methods>;
}

-keepclassmembers class * extends org.greenrobot.eventbus.util.ThrowableFailureEvent {
    <init>(java.lang.Throwable);
}

# Avoid method renaming due to class merging.
-keepclasseswithmembers,includedescriptorclasses,allowshrinking,allowobfuscation class * {
    public void onEvent*(***);
}

-keepclassmembers class * extends com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper {
    <init>(android.content.Context);
}

-keepclassmembers class com.j256.ormlite.field.DatabaseFieldConfig {
    <fields>;}

-keepclassmembers class * extends com.j256.ormlite.dao.Dao {
    <init>(**);
    <init>(**,java.lang.Class);
}

-keep class com.j256.ormlite.android.AndroidLog {
    <init>(java.lang.String);
}

-keep @com.j256.ormlite.table.DatabaseTable class * {
    void set*(***);
    *** get*();
}

-keepclassmembers @interface  com.j256.ormlite.field.DatabaseField {
    <methods>;
}

-keepclassmembers @interface  com.j256.ormlite.field.ForeignCollectionField {
    <methods>;
}

-keepclasseswithmembers class * {
    @com.j256.ormlite.field.DatabaseField
    <fields>;}

-keepclasseswithmembers class * {
    @com.j256.ormlite.field.ForeignCollectionField
    <fields>;}

-keep,allowobfuscation class org.joda.time.DateTime

-keepclassmembers class org.joda.time.DateTime {
    <init>(long);
    long getMillis();
}

-keepclassmembers class net.danlew.android.joda.R$raw {
    public static <fields>;}

-keep class com.couchbase.lite.storage.SQLiteStorageEngine

-keep,allowobfuscation class * extends com.couchbase.lite.storage.SQLiteStorageEngine

-keep,allowobfuscation class * extends com.couchbase.lite.util.Logger

-keep class com.couchbase.touchdb.TDCollateJSON {
    int compareStringsUnicode(java.lang.String,java.lang.String);
}

-keep class com.couchbase.lite.router.Router {
    com.couchbase.lite.Status *(com.couchbase.lite.Database,java.lang.String,java.lang.String);
}

# Ektorp.
-keep class org.ektorp.** extends java.io.Serializable {
    <fields>;    <init>(...);
    void set*(***);
    *** get*();
    boolean is*();
}

-keep class * extends org.ektorp.support.CouchDbDocument {
    <fields>;    <init>(...);
    void set*(***);
    *** get*();
    boolean is*();
}

-keepclassmembers class * {
    @com.google.api.client.util.Key
    <fields>;    @com.google.api.client.util.Value
    <fields>;    @com.google.api.client.util.NullValue
    <fields>;}

-keepclassmembers class * extends com.google.api.client.util.GenericData {
    <fields>;}

-keepclassmembers,includecode class com.google.api.client.util.Data {
    void <clinit>();
}

-keep,allowobfuscation class com.google.api.client.util.Types {
    java.lang.IllegalArgumentException handleExceptionForNewInstance(java.lang.Exception,java.lang.Class);
}

-keepclassmembers class * extends com.google.gdata.model.Element {
    public static com.google.gdata.model.ElementKey KEY;    public static void registerMetadata(com.google.gdata.model.MetadataRegistry);
}

# Javax.persistence.
-keep @javax.persistence.* class *

-keepclassmembers class * {
    @javax.persistence.*
    <fields>;    @javax.persistence.*
    <methods>;
}

-keepclassmembers @org.codehaus.jackson.annotate.JsonAutoDetect class * {
    void set*(***);
    *** get*();
    boolean is*();
}

-keepclassmembers class * {
    @org.codehaus.jackson.annotate.*
    <methods>;
}

# Simpleframework XML.
-keepclassmembers class * {
    @org.simpleframework.xml.*
    <fields>;}

-keep,allowobfuscation class * extends ch.qos.logback.classic.spi.LoggerContextListener

-keep,allowobfuscation class * extends ch.qos.logback.classic.net.ReceiverBase

-keep,allowobfuscation class * extends ch.qos.logback.core.status.StatusListener

-keep,allowobfuscation class * extends ch.qos.logback.core.pattern.DynamicConverter

-keep,allowobfuscation class * extends ch.qos.logback.core.pattern.CompositeConverter

-keep,allowobfuscation class * extends ch.qos.logback.core.joran.action.Action

-keep,allowobfuscation class * extends ch.qos.logback.core.Appender

-keep,allowobfuscation class * extends ch.qos.logback.core.boolex.EventEvaluator

-keep,allowobfuscation class * extends ch.qos.logback.core.spi.PropertyDefiner

-keepclassmembers class ch.qos.logback.** {
    public static ** valueOf(java.lang.String);
}

-keep,includedescriptorclasses,allowobfuscation class * extends ch.qos.logback.classic.selector.ContextSelector {
    public <init>(ch.qos.logback.classic.LoggerContext);
}

-keep class * extends io.fabric.sdk.android.Kit

-keepclassmembers interface  com.facebook.model.GraphObject {
    <methods>;
}

-keep,allowshrinking,allowobfuscation class com.facebook.soloader.SysUtil$LollipopSysdeps {
    <methods>;
}

-keep class com.tapjoy.TJCOffersWebView

-keep class com.tapjoy.TapjoyFullScreenAdWebView

-keep class com.tapjoy.TapjoyVideoView

-keep class com.tapjoy.TJAdUnitView

-keep class com.tapjoy.mraid.view.ActionHandler

-keep class com.tapjoy.mraid.view.Browser

-keep class com.tapjoy.TJAdUnitJSBridge {
    public void *(org.json.JSONObject,java.lang.String);
    public void closeRequested();
}

-keep class net.sqlcipher.CursorWindow {
    % nWindow;}

-keep class net.sqlcipher.database.SQLiteDatabase {
    % mNativeHandle;}

-keep class net.sqlcipher.database.SQLiteProgram {
    % nHandle;    % nStatement;}

-keep class net.sqlcipher.database.SQLiteQuery

-keep class net.sqlcipher.database.SQLiteStatement

-keep class net.sqlcipher.database.* extends java.lang.Exception {
    <init>(java.lang.String);
}

-keep class net.sqlcipher.database.SQLiteCompiledSql {
    % nHandle;    % nStatement;}

-keepclassmembers class net.sqlcipher.database.SQLiteDebug$PagerStats {
    int memoryUsed;    int largestMemAlloc;    int pageCacheOverflo;}

-keepclassmembers class net.sqlcipher.** {
    native <methods>;
}

-keep class info.guardianproject.libcore.io.ErrnoException {
    <init>(...);
}

-keep class info.guardianproject.libcore.io.Struct* {
    <init>(...);
}

-keepclasseswithmembers class info.guardianproject.libcore.io.* {
    native <methods>;
}

-keepclasseswithmembers class info.guardianproject.iocipher.* {
    native <methods>;
}

-keep class info.guardianproject.libcore.io.OsConstants {
    static <fields>;}

-keep class info.guardianproject.iocipher.VirtualFileSystem {
    java.lang.String dbFileName;}

-keep class info.guardianproject.iocipher.FileDescriptor {
    java.lang.String path;    java.lang.String invalid;}

-keep,allowobfuscation class javax.mail.Session

-keep,allowobfuscation class javax.mail.URLName

-keep,allowobfuscation public class * extends javax.mail.Store {
    public <init>(javax.mail.Session,javax.mail.URLName);
}

-keep class org.apache.cordova.App

-keep public class * extends org.apache.cordova.api.CordovaPlugin

-keep class * extends org.apache.cordova.CordovaPlugin

-keep public class * extends com.phonegap.api.Plugin

-keep class * extends org.apache.cordova.CordovaWebViewEngine {
    public <init>(...);
}

-keepclassmembers class * {
    @org.xwalk.core.JavascriptInterface
    <methods>;
}

-keepclassmembers class com.badlogic.gdx.backends.android.AndroidInput* {
    <init>(com.badlogic.gdx.Application,android.content.Context,java.lang.Object,com.badlogic.gdx.backends.android.AndroidApplicationConfiguration);
}

-keepclassmembers class com.badlogic.gdx.physics.box2d.World {
    boolean contactFilter(long,long);
    void beginContact(long);
    void endContact(long);
    void preSolve(long,long);
    void postSolve(long,long);
    boolean reportFixture(long);
    float reportRayFixture(long,float,float,float,float,float);
}

-keepclassmembers class com.badlogic.gdx.graphics.Cubemap* {
    <fields>;    <methods>;
}

-keepclassmembers class com.badlogic.gdx.graphics.GL* {
    <fields>;    <methods>;
}

-keepclassmembers,allowshrinking,allowobfuscation class com.badlogic.gdx.scenes.scene2d.ui.ImageButton {
    <fields>;}

-keep,allowshrinking,allowobfuscation class com.badlogic.gdx.backends.android.AndroidGL20

-keep,allowshrinking,allowobfuscation class com.badlogic.gdx.physics.box2d.Fixture

-keep !abstract public class * extends com.bumptech.glide.module.GlideModule

-keep public class * extends com.bumptech.glide.module.AppGlideModule

-keep class com.bumptech.glide.GeneratedAppGlideModuleImpl

-keep,allowshrinking class com.bumptech.glide.Glide

-keep public enum  com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$** {
    **[] $VALUES;    public <fields>;    public <methods>;
}

-keep class com.nuance.android.vocalizer.VocalizerEngine {
    <fields>;    *** speechMarksReceived(...);
    *** audioSamplesReceived(...);
    *** openAssetFile(...);
    *** closeAssetFile(...);
    *** stop(...);
}

-keep class com.nuance.android.vocalizer.VocalizerSpeechMark {
    <fields>;}

-keep class com.nuance.android.vocalizer.VocalizerVersion {
    <fields>;}

-keep class com.nuance.android.vocalizer.VocalizerVoice {
    <fields>;}

-keep class com.nuance.android.vocalizer.internal.VocalizerFileInfo {
    <fields>;}

-keep class com.nuance.android.vocalizer.internal.VocalizerResourceInfo {
    <fields>;}

-keep class com.nuance.android.vocalizer.internal.VocalizerStatusInfo {
    <fields>;}

-keepclassmembers class com.googlecode.tesseract.android.TessBaseAPI {
    long mNativeData;    void onProgressValues(int,int,int,int,int,int,int,int,int);
}

-keepclassmembers class com.googlecode.eyesfree.textdetect.HydrogenTextDetector$Parameters {
    <fields>;}

-keep,includedescriptorclasses class veg.mediaplayer.sdk.MediaPlayer,veg.mediaplayer.sdk.SDLInputConnection,veg.mediaplayer.sdk.Thumbnailer {
    native <methods>;
}

-keep interface  veg.mediaplayer.sdk.MediaPlayer$MediaPlayerCallback {
    int Status(int);
    int OnReceiveData(java.nio.ByteBuffer,int,long);
}

-keepclassmembers class net.sourceforge.zbar.Symbol {
    long peer;}

-keepclassmembers class net.sourceforge.zbar.SymbolSet {
    long peer;}

-keepclassmembers class net.sourceforge.zbar.ImageScanner {
    long peer;}

-keepclassmembers class net.sourceforge.zbar.Image {
    long peer;    java.lang.Object data;}

# MorphoSmart.
-keep class com.morpho.** {
    *** get*();
    *** get*(int);
    void set*(***);
    boolean is*();
    void put*(***);
    void add*(***);
    *** list*();
    *** find*();
    int open();
    int read(...);
    int write(...);
    int close();
}

-keep,includedescriptorclasses class com.morpho.* {
    native <methods>;
}

-keep,allowshrinking class pl.droidsonroids.gif.GifImageView

-keep class pl.droidsonroids.gif.GifIOException {
    <init>(int);
}

-keep class pl.droidsonroids.gif.GifInfoHandle {
    <init>(long,int,int,int);
    native <methods>;
}

# Enumerations.
-keepclassmembers enum  * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

# Serializable classes.
-keepclassmembers class * extends java.io.Serializable {
    private static final java.io.ObjectStreamField[] serialPersistentFields;    private void writeObject(java.io.ObjectOutputStream);
    private void readObject(java.io.ObjectInputStream);
    java.lang.Object writeReplace();
    java.lang.Object readResolve();
}

# Java 7 ClassValue workaround when building vs an older android.jar
-keepclassmembers class ** {
    java.lang.Object computeValue(java.lang.Class);
}

-keepclassmembers class * extends javax.net.ssl.SSLSocketFactory {
    ** sslParameters;    ** context;    ** delegate;}

-keepclassmembers class **.SSLParametersImpl {
    javax.net.ssl.X509TrustManager x509TrustManager;    javax.net.ssl.X509TrustManager trustManager;}

# React Native.
-keepclassmembers,includedescriptorclasses class com.facebook.react.bridge.** {
    <fields>;    <methods>;
}

-keepclassmembers,includedescriptorclasses class com.facebook.** {
    native <methods>;
}

-keep,includedescriptorclasses class com.facebook.react.turbomodule.core.** {
    <fields>;    <methods>;
}

-keep,includedescriptorclasses class com.facebook.react.internal.turbomodule.core.** {
    <fields>;    <methods>;
}

-keep class com.facebook.react.bridge.* {
    <fields>;    <methods>;
}

-keep class com.facebook.jni.* {
    <fields>;    <methods>;
}

-keep class * extends com.facebook.react.bridge.JavaScriptModule {
    <fields>;    <methods>;
}

-keepclassmembers class * extends com.facebook.react.bridge.NativeModule {
    @com.facebook.react.bridge.ReactMethod
    <fields>;    @com.facebook.react.bridge.ReactMethod
    <methods>;
}

-keepclassmembers,allowobfuscation class * {
    @com.facebook.react.uimanager.annotations.ReactProp
    <methods>;
}

-keepclassmembers,allowobfuscation class * {
    @com.facebook.react.uimanager.annotations.ReactPropGroup
    <methods>;
}

-keepclassmembers,allowobfuscation class * {
    @com.facebook.react.uimanager.annotations.ReactPropertyHolder
    <methods>;
}

-keep class com.facebook.react.modules.blob.BlobCollector {
    <fields>;    <methods>;
}

-keepclassmembers class com.facebook.react.ReactInstanceManager {
    *** handleCxxError(java.lang.Exception);
}

-keepclassmembers class com.facebook.react.uimanager.LayoutShadowNode {
    <methods>;
}

-keepclassmembers class com.facebook.react.views.progressbar.ProgressBarShadowNode {
    <methods>;
}

-keepclassmembers class com.facebook.react.views.slider.ReactSliderManager$ReactSliderShadowNode {
    <methods>;
}

-keepclassmembers class com.facebook.react.views.switchview.ReactSwitchManager$ReactSwitchShadowNode {
    <methods>;
}

-keepclassmembers class com.facebook.react.views.text.ReactTextInlineImageShadowNode {
    <methods>;
}

-keepclassmembers class com.facebook.react.views.text.frescosupport.FrescoBasedReactTextInlineImageShadowNode {
    <methods>;
}

-keepclassmembers class com.facebook.react.views.modal.ModalHostShadowNode {
    <methods>;
}

-keepclassmembers class com.facebook.react.views.text.ReactRawTextShadowNode {
    <methods>;
}

-keepclassmembers class com.facebook.react.views.text.ReactBaseTextShadowNode {
    <methods>;
}

-keepclassmembers class com.facebook.react.views.textinput.ReactTextInputShadowNode {
    <methods>;
}

-keepclassmembers class com.facebook.react.views.text.ReactTextShadowNode {
    <methods>;
}

-keepclassmembers class com.facebook.react.views.text.ReactVirtualTextShadowNode {
    <methods>;
}

-keep @expo.modules.core.interfaces.DoNotStrip class *

-keepclassmembers class * {
    @expo.modules.core.interfaces.DoNotStrip
    <fields>;    @expo.modules.core.interfaces.DoNotStrip
    <methods>;
}

-keep class * extends expo.modules.kotlin.records.Record {
    <fields>;    <methods>;
}

-keep class * extends expo.modules.kotlin.sharedobjects.SharedObject

-keep enum  * extends expo.modules.kotlin.types.Enumerable {
    <fields>;    <methods>;
}

-keep,allowoptimization,allowobfuscation class * extends expo.modules.kotlin.modules.Module {
    public <init>();
    public expo.modules.kotlin.modules.ModuleDefinitionData definition();
}

-keepclassmembers class * extends expo.modules.kotlin.views.ExpoView {
    public <init>(android.content.Context);
    public <init>(android.content.Context,expo.modules.kotlin.AppContext);
}

-keepclassmembers class * {
    expo.modules.kotlin.viewevent.ViewEventCallback *;}

-keepclassmembers class * {
    expo.modules.kotlin.viewevent.ViewEventDelegate *;}

# Zimperium
-keep class com.zimperium.zips.** extends com.zimperium.protobuf.GeneratedMessageLite

-keep class com.zimperium.zcloud.** extends com.zimperium.protobuf.GeneratedMessageLite

# Usabilla
-keep,allowshrinking class com.usabilla.sdk.ubform.UsabillaInternal

-keep,allowshrinking class com.usabilla.sdk.ubform.telemetry.UbTelemetryRecorder

# Amazon AWS
-keep,allowshrinking class **Client extends com.amazonaws.AmazonWebServiceClient

# AndroidX Preference
-keep,allowshrinking class androidx.preference.Preference

# The following annotations can be specified with classes and with class
# members.
# @Keep specifies not to shrink, optimize, or obfuscate the annotated class
# or class member as an entry point.
-keep @proguard.annotation.Keep class *

-keepclassmembers class * {
    @proguard.annotation.Keep
    <fields>;    @proguard.annotation.Keep
    <methods>;
}

# @KeepName specifies not to optimize or obfuscate the annotated class or
# class member as an entry point.
-keep,allowshrinking @proguard.annotation.KeepName class *

-keepclassmembers,allowshrinking class * {
    @proguard.annotation.KeepName
    <fields>;    @proguard.annotation.KeepName
    <methods>;
}

# The following annotations can only be specified with classes.
# @KeepImplementations and @KeepPublicImplementations specify to keep all,
# resp. all public, implementations or extensions of the annotated class as
# entry points. Note the extension of the java-like syntax, adding annotations
# before the (wild-carded) interface name.
-keep class * extends @proguard.annotation.KeepImplementations *

-keep public class * extends @proguard.annotation.KeepPublicImplementations *

# @KeepClassMembers, @KeepPublicClassMembers, and
# @KeepPublicProtectedClassMembers specify to keep all, all public, resp.
# all public or protected, class members of the annotated class from being
# shrunk, optimized, or obfuscated as entry points.
-keepclassmembers @proguard.annotation.KeepClassMembers class * {
    <fields>;    <methods>;
}

-keepclassmembers @proguard.annotation.KeepPublicClassMembers class * {
    public <fields>;    public <methods>;
}

-keepclassmembers @proguard.annotation.KeepPublicProtectedClassMembers class * {
    public protected <fields>;    public protected <methods>;
}

# @KeepClassMemberNames, @KeepPublicClassMemberNames, and
# @KeepPublicProtectedClassMemberNames specify to keep all, all public, resp.
# all public or protected, class members of the annotated class from being
# optimized or obfuscated as entry points.
-keepclassmembers,allowshrinking @proguard.annotation.KeepClassMemberNames class * {
    <fields>;    <methods>;
}

-keepclassmembers,allowshrinking @proguard.annotation.KeepPublicClassMemberNames class * {
    public <fields>;    public <methods>;
}

-keepclassmembers,allowshrinking @proguard.annotation.KeepPublicProtectedClassMemberNames class * {
    public protected <fields>;    public protected <methods>;
}

# @KeepGettersSetters and @KeepPublicGettersSetters specify to keep all, resp.
# all public, getters and setters of the annotated class from being shrunk,
# optimized, or obfuscated as entry points.
-keepclassmembers @proguard.annotation.KeepGettersSetters class * {
    void set*(***);
    void set*(int,***);
    boolean is*();
    boolean is*(int);
    *** get*();
    *** get*(int);
}

-keepclassmembers @proguard.annotation.KeepPublicGettersSetters class * {
    public void set*(***);
    public void set*(int,***);
    public boolean is*();
    public boolean is*(int);
    public *** get*();
    public *** get*(int);
}

-keep @androidx.annotation.Keep class *

-keepclassmembers class * {
    @androidx.annotation.Keep
    <fields>;    @androidx.annotation.Keep
    <methods>;
}

# Avoid merging and inlining compatibility classes.
-keep,allowshrinking,allowobfuscation class androidx.**Compat*,androidx.**Honeycomb*,androidx.**IceCreamSandwich*,androidx.**JellyBean*,androidx.**Jellybean*,androidx.**JB*,androidx.**KitKat*,androidx.**Kitkat*,androidx.**Lollipop*,androidx.**19,androidx.**20,androidx.**21,androidx.**22,androidx.**23,androidx.**24,androidx.**25,androidx.**Api* {
    <fields>;    <methods>;
}

-keep,allowshrinking,allowobfuscation @android.annotation.TargetApi class androidx.** {
    <fields>;    <methods>;
}

-keep,allowshrinking,allowobfuscation @androidx.annotation.RequiresApi class androidx.** {
    <fields>;    <methods>;
}

# CoordinatorLayout.
-keep,allowshrinking class androidx.coordinatorlayout.widget.CoordinatorLayout

# Signature optimized with class from API level 19 or higher.
-keep,allowshrinking,allowobfuscation class androidx.fragment.app.Fragment$InstantiationException {
    <init>(...);
}

# Fragments
-keepclassmembers class androidx.fragment.app.Fragment {
    public android.view.View getView();
}

-keepclassmembers class androidx.fragment.app.FragmentManager {
    public androidx.fragment.app.Fragment findFragmentById(int);
    public androidx.fragment.app.Fragment findFragmentByTag(java.lang.String);
}

-keep,allowshrinking class androidx.fragment.app.FragmentContainerView

# Fields accessed before initialization.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.** {
    !static final <fields>;}

# Renderscript.
-keep class androidx.**.RenderScript {
    <fields>;    <methods>;
}

-keepclassmembers class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
    <init>(android.app.Application,...);
}

# Keep LifecycleOwner fields to ensure that classes keep a strong reference to their LifecycleOwners.
# This is to prevent an error that can occur when the LifecycleOwner reference is garbage collected too early,
# as the LifecycleRegistry only keeps a weak reference to it.
-keepclassmembers,allowshrinking,allowobfuscation class * {
    androidx.lifecycle.LifecycleOwner *;}

# Wear.
-keep,allowshrinking,allowobfuscation class androidx.wear.ambient.SharedLibraryVersion* {
    <fields>;    <methods>;
}

# Multidex support library, prevent class merging.
-keep,allowshrinking,allowobfuscation class androidx.multidex.**

# ActionProvider
-keepclassmembers class * extends androidx.core.view.ActionProvider {
    <init>(android.content.Context);
}

# RemoteCallback
-if class * extends androidx.remotecallback.CallbackReceiver

# RemoteCallback
-keep class <1>Initializer

# T13715: This is a consumer rule from androidx.window where the original did not contain
#         return types causing a parsing error.
-if class androidx.window.layout.SidecarCompat {
    public void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface);
}

-keep class androidx.window.layout.SidecarCompat$TranslatingCallback,androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback {
    public void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState);
    public void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo);
}

# T30937: Version 1.1.0 of androidx.window updates the consumer rules we initially added for T13715.
-if class androidx.window.layout.adapter.sidecar.SidecarCompat {
    public *** setExtensionCallback(androidx.window.layout.adapter.sidecar.ExtensionInterfaceCompat$ExtensionCallbackInterface);
}

-keep class androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback,androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback {
    public *** onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState);
    public *** onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo);
}

# T7292: The androidx initialization implementation can cause a field required by an opaque predicate to have
#        an unexpected value.
-keep,includecode class androidx.core.view.WindowInsetsCompat$Impl** {
    <fields>;    <methods>;
}

# T26903: The androidx RecyclerView depends on its classname for determining the full name of a class accessed
#         through reflection.
-keep,allowshrinking class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager

-if class androidx.recyclerview.widget.* extends androidx.recyclerview.widget.RecyclerView$LayoutManager

-keep class androidx.recyclerview.widget.RecyclerView

# T27202 and T27122. The Chromium boundary interface is used by the WebKit androidx module.
-keep public class org.chromium.support_lib_boundary.* {
    public <fields>;    public <methods>;
}

# Jacoco
-keep class com.vladium.** {
    <fields>;    <methods>;
}

-keep class com.jacoco.** {
    <fields>;    <methods>;
}

# WorkManager Multiprocess Library
-keepclassmembers class androidx.work.multiprocess.RemoteWorkManagerClient {
    <init>(android.content.Context,androidx.work.impl.WorkManagerImpl);
}

# Don't try to find new names for previously obfuscated short native methods.
-keepclassmembers,allowshrinking class ** {
    native *** ?(...);
    native *** ??(...);
}

# @ObfuscateCodeXXX specifies to obfuscate the code attributes of annotated
# classes and methods.
-obfuscatecode,low @com.guardsquare.dexguard.annotation.ObfuscateCodeLow class *

-obfuscatecode,low class * {
    @com.guardsquare.dexguard.annotation.ObfuscateCodeLow
    <init>(...);
    @com.guardsquare.dexguard.annotation.ObfuscateCodeLow
    <methods>;
}

-obfuscatecode,medium @com.guardsquare.dexguard.annotation.ObfuscateCodeMedium class *

-obfuscatecode,medium class * {
    @com.guardsquare.dexguard.annotation.ObfuscateCodeMedium
    <init>(...);
    @com.guardsquare.dexguard.annotation.ObfuscateCodeMedium
    <methods>;
}

-obfuscatecode,high @com.guardsquare.dexguard.annotation.ObfuscateCodeHigh class *

-obfuscatecode,high class * {
    @com.guardsquare.dexguard.annotation.ObfuscateCodeHigh
    <init>(...);
    @com.guardsquare.dexguard.annotation.ObfuscateCodeHigh
    <methods>;
}

# @ObfuscateCodeXXX specifies to obfuscate the code attributes of annotated
# classes and methods.
-obfuscatecode,low @com.guardsquare.dexguard.annotation.ObfuscateCodeLow class *

-obfuscatecode,low class * {
    @com.guardsquare.dexguard.annotation.ObfuscateCodeLow
    <init>(...);
    @com.guardsquare.dexguard.annotation.ObfuscateCodeLow
    <methods>;
}

-obfuscatecode,medium @com.guardsquare.dexguard.annotation.ObfuscateCodeMedium class *

-obfuscatecode,medium class * {
    @com.guardsquare.dexguard.annotation.ObfuscateCodeMedium
    <init>(...);
    @com.guardsquare.dexguard.annotation.ObfuscateCodeMedium
    <methods>;
}

-obfuscatecode,high @com.guardsquare.dexguard.annotation.ObfuscateCodeHigh class *

-obfuscatecode,high class * {
    @com.guardsquare.dexguard.annotation.ObfuscateCodeHigh
    <init>(...);
    @com.guardsquare.dexguard.annotation.ObfuscateCodeHigh
    <methods>;
}

# @VirtualizeCode specifies to virtualize the code attributes of annotated
# classes and methods.
-virtualizecode @com.guardsquare.dexguard.annotation.VirtualizeCode class *

-virtualizecode class * {
    @com.guardsquare.dexguard.annotation.VirtualizeCode
    <methods>;
}

-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED = false;}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED = true;}

-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING = false;}

-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}

-assumenosideeffects class androidx.startup.StartupLogger {
    public static <methods>;
}

# DexGuard configuration.
# Copyright (c) 2012-2020 Guardsquare NV
# 
# Note that the DexGuard plugin jars generally contain their own copies
# of this file.
-assumenosideeffects class java.**

-assumenosideeffects class android.**

# It is safe to assume loading system classes should have no expected side effects
# but the assumption does not hold for GMS program classes. (T33297)
-assumenosideeffects class !com.google.android.gms.**,com.google.android.**

-assumenosideeffects public class java.lang.Object {
    public final java.lang.Class getClass();
#    public int hashCode();
#    public boolean equals(java.lang.Object);
#    protected java.lang.Object clone();
#    public java.lang.String toString();
}

-assumenosideeffects public final class java.lang.Boolean {
    public static java.lang.Boolean valueOf(boolean);
    public static java.lang.Boolean valueOf(java.lang.String);
    public static java.lang.String toString(boolean);
    public static boolean getBoolean(java.lang.String);
    public static boolean parseBoolean(java.lang.String);
    public boolean booleanValue();
    public int compareTo(java.lang.Boolean);
#    public java.lang.String toString();
#    public int hashCode();
#    public boolean equals(java.lang.Object);
#    public int compareTo(java.lang.Object);
}

-assumenosideeffects public final class java.lang.Byte {
    public static java.lang.String toString(byte);
    public static java.lang.Byte valueOf(byte);
    public byte byteValue();
    public short shortValue();
    public int intValue();
    public long longValue();
    public float floatValue();
    public double doubleValue();
    public int compareTo(java.lang.Byte);
#    public static byte parseByte(java.lang.String);
#    public static byte parseByte(java.lang.String, int);
#    public static java.lang.Byte valueOf(java.lang.String, int);
#    public static java.lang.Byte valueOf(java.lang.String);
#    public static java.lang.Byte decode(java.lang.String);
#    public java.lang.String toString();
#    public int hashCode();
#    public boolean equals(java.lang.Object);
#    public int compareTo(java.lang.Object);
}

-assumenosideeffects public final class java.lang.Character {
    public static java.lang.String toString(char);
    public static boolean isValidCodePoint(int);
    public static boolean isSupplementaryCodePoint(int);
    public static boolean isHighSurrogate(char);
    public static boolean isLowSurrogate(char);
    public static boolean isSurrogatePair(char,char);
    public static int charCount(int);
    public static int toCodePoint(char,char);
    public static int codePointAt(char[],int);
    public static int codePointAt(char[],int,int);
    public static int codePointBefore(char[],int);
    public static int codePointBefore(char[],int,int);
    public static char[] toChars(int);
    public static int codePointCount(char[],int,int);
    public static int offsetByCodePoints(char[],int,int,int,int);
    public static boolean isLowerCase(char);
    public static boolean isLowerCase(int);
    public static boolean isUpperCase(char);
    public static boolean isUpperCase(int);
    public static boolean isTitleCase(char);
    public static boolean isTitleCase(int);
    public static boolean isDigit(char);
    public static boolean isDigit(int);
    public static boolean isDefined(char);
    public static boolean isDefined(int);
    public static boolean isLetter(char);
    public static boolean isLetter(int);
    public static boolean isLetterOrDigit(char);
    public static boolean isLetterOrDigit(int);
    public static boolean isJavaLetter(char);
    public static boolean isJavaLetterOrDigit(char);
    public static boolean isJavaIdentifierStart(char);
    public static boolean isJavaIdentifierStart(int);
    public static boolean isJavaIdentifierPart(char);
    public static boolean isJavaIdentifierPart(int);
    public static boolean isUnicodeIdentifierStart(char);
    public static boolean isUnicodeIdentifierStart(int);
    public static boolean isUnicodeIdentifierPart(char);
    public static boolean isUnicodeIdentifierPart(int);
    public static boolean isIdentifierIgnorable(char);
    public static boolean isIdentifierIgnorable(int);
    public static char toLowerCase(char);
    public static int toLowerCase(int);
    public static char toUpperCase(char);
    public static int toUpperCase(int);
    public static char toTitleCase(char);
    public static int toTitleCase(int);
    public static int digit(char,int);
    public static int digit(int,int);
    public static int getNumericValue(char);
    public static int getNumericValue(int);
    public static boolean isSpace(char);
    public static boolean isSpaceChar(char);
    public static boolean isSpaceChar(int);
    public static boolean isWhitespace(char);
    public static boolean isWhitespace(int);
    public static boolean isISOControl(char);
    public static boolean isISOControl(int);
    public static int getType(char);
    public static int getType(int);
    public static char forDigit(int,int);
    public static byte getDirectionality(char);
    public static byte getDirectionality(int);
    public static boolean isMirrored(char);
    public static boolean isMirrored(int);
    public static java.lang.Character valueOf(char);
    public static char reverseBytes(char);
    public char charValue();
    public int compareTo(java.lang.Character);
#    public static int codePointAt(java.lang.CharSequence, int);
#    public static int codePointBefore(java.lang.CharSequence, int);
#    public static int toChars(int, char[], int);
#    public static int codePointCount(java.lang.CharSequence, int, int);
#    public static int offsetByCodePoints(java.lang.CharSequence, int, int);
#    public int hashCode();
#    public boolean equals(java.lang.Object);
#    public java.lang.String toString();
#    public int compareTo(java.lang.Object);
}

-assumenosideeffects public final class java.lang.Double {
    public static java.lang.String toString(double);
    public static java.lang.String toHexString(double);
    public static java.lang.Double valueOf(double);
    public static boolean isNaN(double);
    public static boolean isInfinite(double);
    public static long doubleToLongBits(double);
    public static long doubleToRawLongBits(double);
    public static double longBitsToDouble(long);
    public static int compare(double,double);
    public boolean isNaN();
    public boolean isInfinite();
    public java.lang.String toString();
    public byte byteValue();
    public short shortValue();
    public int intValue();
    public long longValue();
    public float floatValue();
    public double doubleValue();
    public int compareTo(java.lang.Double);
#    public static java.lang.Double valueOf(java.lang.String);
#    public static double parseDouble(java.lang.String);
#    public int hashCode();
#    public boolean equals(java.lang.Object);
#    public int compareTo(java.lang.Object);
}

-assumenosideeffects public final class java.lang.Float {
    public static java.lang.String toString(float);
    public static java.lang.String toHexString(float);
    public static java.lang.Float valueOf(float);
    public static boolean isNaN(float);
    public static boolean isInfinite(float);
    public static int floatToIntBits(float);
    public static int floatToRawIntBits(float);
    public static float intBitsToFloat(int);
    public static int compare(float,float);
    public boolean isNaN();
    public boolean isInfinite();
    public byte byteValue();
    public short shortValue();
    public int intValue();
    public long longValue();
    public float floatValue();
    public double doubleValue();
    public int compareTo(java.lang.Float);
#    public static java.lang.Float valueOf(java.lang.String);
#    public static float parseFloat(java.lang.String);
#    public java.lang.String toString();
#    public int hashCode();
#    public boolean equals(java.lang.Object);
#    public int compareTo(java.lang.Object);
}

-assumenosideeffects public final class java.lang.Integer {
    public static java.lang.String toString(int,int);
    public static java.lang.String toHexString(int);
    public static java.lang.String toOctalString(int);
    public static java.lang.String toBinaryString(int);
    public static java.lang.String toString(int);
    public static java.lang.Integer valueOf(int);
    public static java.lang.Integer getInteger(java.lang.String);
    public static java.lang.Integer getInteger(java.lang.String,int);
    public static java.lang.Integer getInteger(java.lang.String,java.lang.Integer);
    public static int highestOneBit(int);
    public static int lowestOneBit(int);
    public static int numberOfLeadingZeros(int);
    public static int numberOfTrailingZeros(int);
    public static int bitCount(int);
    public static int rotateLeft(int,int);
    public static int rotateRight(int,int);
    public static int reverse(int);
    public static int signum(int);
    public static int reverseBytes(int);
    public byte byteValue();
    public short shortValue();
    public int intValue();
    public long longValue();
    public float floatValue();
    public double doubleValue();
    public int compareTo(java.lang.Integer);
#    public static int parseInt(java.lang.String, int);
#    public static int parseInt(java.lang.String);
#    public static java.lang.Integer valueOf(java.lang.String, int);
#    public static java.lang.Integer valueOf(java.lang.String);
#    public static java.lang.Integer decode(java.lang.String);
#    public java.lang.String toString();
#    public int hashCode();
#    public boolean equals(java.lang.Object);
#    public int compareTo(java.lang.Object);
}

-assumenosideeffects public final class java.lang.Long {
    public static java.lang.String toString(long,int);
    public static java.lang.String toHexString(long);
    public static java.lang.String toOctalString(long);
    public static java.lang.String toBinaryString(long);
    public static java.lang.String toString(long);
    public static java.lang.Long valueOf(long);
    public static java.lang.Long getLong(java.lang.String);
    public static java.lang.Long getLong(java.lang.String,long);
    public static java.lang.Long getLong(java.lang.String,java.lang.Long);
    public static long highestOneBit(long);
    public static long lowestOneBit(long);
    public static int numberOfLeadingZeros(long);
    public static int numberOfTrailingZeros(long);
    public static int bitCount(long);
    public static long rotateLeft(long,int);
    public static long rotateRight(long,int);
    public static long reverse(long);
    public static int signum(long);
    public static long reverseBytes(long);
    public byte byteValue();
    public short shortValue();
    public int intValue();
    public long longValue();
    public float floatValue();
    public double doubleValue();
    public int compareTo(java.lang.Long);
#    public static long parseLong(java.lang.String, int);
#    public static long parseLong(java.lang.String);
#    public static java.lang.Long valueOf(java.lang.String, int);
#    public static java.lang.Long valueOf(java.lang.String);
#    public static java.lang.Long decode(java.lang.String);
#    public java.lang.String toString();
#    public int hashCode();
#    public boolean equals(java.lang.Object);
#    public int compareTo(java.lang.Object);
}

-assumenosideeffects public final class java.lang.Short {
    public static java.lang.String toString(short);
    public static java.lang.Short valueOf(short);
    public static short reverseBytes(short);
    public byte byteValue();
    public short shortValue();
    public int intValue();
    public long longValue();
    public float floatValue();
    public double doubleValue();
    public int compareTo(java.lang.Short);
#    public static short parseShort(java.lang.String);
#    public static short parseShort(java.lang.String, int);
#    public static java.lang.Short valueOf(java.lang.String, int);
#    public static java.lang.Short valueOf(java.lang.String);
#    public static java.lang.Short decode(java.lang.String);
#    public java.lang.String toString();
#    public int hashCode();
#    public boolean equals(java.lang.Object);
#    public int compareTo(java.lang.Object);
}

-assumenosideeffects public abstract class java.lang.Enum {
    public final java.lang.String name();
    public final int ordinal();
    public final int compareTo(java.lang.Enum);
    public final java.lang.Class getDeclaringClass();
    public static java.lang.Enum valueOf(java.lang.Class,java.lang.String);
#    public java.lang.String toString();
#    public final boolean equals(java.lang.Object);
#    public final int hashCode();
#    protected final java.lang.Object clone();
#    protected final void finalize();
#    public int compareTo(java.lang.Object);
}

-assumenosideeffects public final class java.lang.Math {
    public static double sin(double);
    public static double cos(double);
    public static double tan(double);
    public static double asin(double);
    public static double acos(double);
    public static double atan(double);
    public static double toRadians(double);
    public static double toDegrees(double);
    public static double exp(double);
    public static double log(double);
    public static double log10(double);
    public static double sqrt(double);
    public static double cbrt(double);
    public static double IEEEremainder(double,double);
    public static double ceil(double);
    public static double floor(double);
    public static double rint(double);
    public static double atan2(double,double);
    public static double pow(double,double);
    public static int round(float);
    public static long round(double);
    public static double random();
    public static int abs(int);
    public static long abs(long);
    public static float abs(float);
    public static double abs(double);
    public static int max(int,int);
    public static long max(long,long);
    public static float max(float,float);
    public static double max(double,double);
    public static int min(int,int);
    public static long min(long,long);
    public static float min(float,float);
    public static double min(double,double);
    public static double ulp(double);
    public static float ulp(float);
    public static double signum(double);
    public static float signum(float);
    public static double sinh(double);
    public static double cosh(double);
    public static double tanh(double);
    public static double hypot(double,double);
    public static double expm1(double);
    public static double log1p(double);
    public static double copySign(double,double);
    public static float copySign(float,float);
    public static int getExponent(float);
    public static int getExponent(double);
    public static double nextAfter(double,double);
    public static float nextAfter(float,double);
    public static double nextUp(double);
    public static float nextUp(float);
    public static double scalb(double,int);
    public static float scalb(float,int);
}

-assumenosideeffects public final class java.lang.StrictMath {
    public static double sin(double);
    public static double cos(double);
    public static double tan(double);
    public static double asin(double);
    public static double acos(double);
    public static double atan(double);
    public static strictfp double toRadians(double);
    public static strictfp double toDegrees(double);
    public static double exp(double);
    public static double log(double);
    public static double log10(double);
    public static double sqrt(double);
    public static double cbrt(double);
    public static double IEEEremainder(double,double);
    public static double ceil(double);
    public static double floor(double);
    public static double rint(double);
    public static double atan2(double,double);
    public static double pow(double,double);
    public static int round(float);
    public static long round(double);
    public static double random();
    public static int abs(int);
    public static long abs(long);
    public static float abs(float);
    public static double abs(double);
    public static int max(int,int);
    public static long max(long,long);
    public static float max(float,float);
    public static double max(double,double);
    public static int min(int,int);
    public static long min(long,long);
    public static float min(float,float);
    public static double min(double,double);
    public static double ulp(double);
    public static float ulp(float);
    public static double signum(double);
    public static float signum(float);
    public static double sinh(double);
    public static double cosh(double);
    public static double tanh(double);
    public static double hypot(double,double);
    public static double expm1(double);
    public static double log1p(double);
    public static double copySign(double,double);
    public static float copySign(float,float);
    public static int getExponent(float);
    public static int getExponent(double);
    public static double nextAfter(double,double);
    public static float nextAfter(float,double);
    public static double nextUp(double);
    public static float nextUp(float);
    public static double scalb(double,int);
    public static float scalb(float,int);
}

-assumenosideeffects public final class java.lang.Class {
    public boolean isInstance(java.lang.Object);
    public boolean isAssignableFrom(java.lang.Class);
    public boolean isInterface();
    public boolean isArray();
    public boolean isPrimitive();
    public boolean isAnnotation();
    public boolean isSynthetic();
    public java.lang.String getName();
    public java.lang.ClassLoader getClassLoader();
    public java.lang.reflect.TypeVariable[] getTypeParameters();
    public java.lang.Class getSuperclass();
    public java.lang.reflect.Type getGenericSuperclass();
    public java.lang.Package getPackage();
    public java.lang.Class[] getInterfaces();
    public java.lang.reflect.Type[] getGenericInterfaces();
    public java.lang.Class getComponentType();
    public int getModifiers();
    public java.lang.Object[] getSigners();
    public java.lang.reflect.Method getEnclosingMethod();
    public java.lang.reflect.Constructor getEnclosingConstructor();
    public java.lang.Class getDeclaringClass();
    public java.lang.Class getEnclosingClass();
    public java.lang.String getSimpleName();
    public java.lang.String getCanonicalName();
    public boolean isAnonymousClass();
    public boolean isLocalClass();
    public boolean isMemberClass();
    public java.lang.Class[] getClasses();
    public java.lang.reflect.Field[] getFields();
    public java.lang.reflect.Method[] getMethods();
    public java.lang.reflect.Constructor[] getConstructors();
    public java.lang.Class[] getDeclaredClasses();
    public java.lang.reflect.Field[] getDeclaredFields();
    public java.lang.reflect.Method[] getDeclaredMethods();
    public java.lang.reflect.Constructor[] getDeclaredConstructors();
    public java.security.ProtectionDomain getProtectionDomain();
    public boolean desiredAssertionStatus();
    public boolean isEnum();
    public java.lang.Object[] getEnumConstants();
    public boolean isAnnotationPresent(java.lang.Class);
    public java.lang.annotation.Annotation[] getAnnotations();
    public java.lang.annotation.Annotation[] getDeclaredAnnotations();
#    public java.lang.String toString();
#    public static java.lang.Class forName(java.lang.String);
#    public static java.lang.Class forName(java.lang.String, boolean, java.lang.ClassLoader);
#    public java.lang.Object newInstance();
#    public java.lang.reflect.Field getField(java.lang.String);
#    public java.lang.reflect.Method getMethod(java.lang.String, java.lang.Class[]);
#    public java.lang.reflect.Constructor getConstructor(java.lang.Class[]);
#    public java.lang.reflect.Field getDeclaredField(java.lang.String);
#    public java.lang.reflect.Method getDeclaredMethod(java.lang.String, java.lang.Class[]);
#    public java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[]);
#    public java.io.InputStream getResourceAsStream(java.lang.String);
#    public java.net.URL getResource(java.lang.String);
#    public java.lang.Object cast(java.lang.Object);
#    public java.lang.Class asSubclass(java.lang.Class);
#    public java.lang.annotation.Annotation getAnnotation(java.lang.Class);
}

-assumenosideeffects public abstract class java.lang.ClassLoader {
    public static java.net.URL getSystemResource(java.lang.String);
    public static java.util.Enumeration getSystemResources(java.lang.String);
    public static java.io.InputStream getSystemResourceAsStream(java.lang.String);
    public static java.lang.ClassLoader getSystemClassLoader();
    protected final java.lang.Class defineClass(byte[],int,int);
    protected final java.lang.Class defineClass(java.lang.String,byte[],int,int);
    protected final java.lang.Class defineClass(java.lang.String,byte[],int,int,java.security.ProtectionDomain);
    protected final java.lang.Class defineClass(java.lang.String,java.nio.ByteBuffer,java.security.ProtectionDomain);
    protected final java.lang.Class findSystemClass(java.lang.String);
    protected final java.lang.Class findLoadedClass(java.lang.String);
    public final java.lang.ClassLoader getParent();
#    public java.lang.Class loadClass(java.lang.String);
#    protected synchronized java.lang.Class loadClass(java.lang.String, boolean);
#    protected java.lang.Class findClass(java.lang.String);
#    protected final void resolveClass(java.lang.Class);
#    protected final void setSigners(java.lang.Class, java.lang.Object[]);
#    public java.net.URL getResource(java.lang.String);
#    public java.util.Enumeration getResources(java.lang.String);
#    protected java.net.URL findResource(java.lang.String);
#    protected java.util.Enumeration findResources(java.lang.String);
#    public java.io.InputStream getResourceAsStream(java.lang.String);
#    protected java.lang.Package definePackage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL);
#    protected java.lang.Package getPackage(java.lang.String);
#    protected java.lang.Package[] getPackages();
#    protected java.lang.String findLibrary(java.lang.String);
}

# -assumenosideeffects public class java.lang.InheritableThreadLocal {
#    protected java.lang.Object childValue(java.lang.Object);
# }
-assumenosideeffects public class java.lang.Package {
    public static java.lang.Package getPackage(java.lang.String);
    public static java.lang.Package[] getPackages();
#    public java.lang.String getName();
#    public java.lang.String getSpecificationTitle();
#    public java.lang.String getSpecificationVersion();
#    public java.lang.String getSpecificationVendor();
#    public java.lang.String getImplementationTitle();
#    public java.lang.String getImplementationVersion();
#    public java.lang.String getImplementationVendor();
#    public boolean isSealed();
#    public boolean isSealed(java.net.URL);
#    public boolean isCompatibleWith(java.lang.String);
#    public int hashCode();
#    public java.lang.String toString();
#    public java.lang.annotation.Annotation getAnnotation(java.lang.Class);
#    public boolean isAnnotationPresent(java.lang.Class);
#    public java.lang.annotation.Annotation[] getAnnotations();
#    public java.lang.annotation.Annotation[] getDeclaredAnnotations();
}

-assumenosideeffects public final class java.lang.ProcessBuilder {
    public java.util.List command();
    public java.util.Map environment();
    public java.io.File directory();
    public boolean redirectErrorStream();
#    public java.lang.ProcessBuilder command(java.util.List);
#    public java.lang.ProcessBuilder command(java.lang.String[]);
#    public java.lang.ProcessBuilder directory(java.io.File);
#    public java.lang.ProcessBuilder redirectErrorStream(boolean);
#    public java.lang.Process start();
}

# -assumenoexternalsideeffects public class java.lang.Runtime {
#    public static void runFinalizersOnExit(boolean);
#    public void exit(int);
#    public void addShutdownHook(java.lang.Thread);
#    public boolean removeShutdownHook(java.lang.Thread);
#    public void halt(int);
#    public java.lang.Process exec(java.lang.String);
#    public java.lang.Process exec(java.lang.String, java.lang.String[]);
#    public java.lang.Process exec(java.lang.String, java.lang.String[], java.io.File);
#    public java.lang.Process exec(java.lang.String[]);
#    public java.lang.Process exec(java.lang.String[], java.lang.String[]);
#    public java.lang.Process exec(java.lang.String[], java.lang.String[], java.io.File);
#    public void gc();
#    public void runFinalization();
#    public void traceInstructions(boolean);
#    public void traceMethodCalls(boolean);
#    public void load(java.lang.String);
#    public void loadLibrary(java.lang.String);
# }
-assumenosideeffects public class java.lang.Runtime {
    public static java.lang.Runtime getRuntime();
    public int availableProcessors();
    public long freeMemory();
    public long totalMemory();
    public long maxMemory();
    public java.io.InputStream getLocalizedInputStream(java.io.InputStream);
    public java.io.OutputStream getLocalizedOutputStream(java.io.OutputStream);
}

-assumenosideeffects public final class java.lang.StackTraceElement {
    public java.lang.String getFileName();
    public int getLineNumber();
    public java.lang.String getClassName();
    public java.lang.String getMethodName();
    public boolean isNativeMethod();
#    public java.lang.String toString();
#    public boolean equals(java.lang.Object);
#    public int hashCode();
}

-assumenosideeffects public final class java.lang.System {
    public static java.io.Console console();
    public static java.nio.channels.Channel inheritedChannel();
    public static java.lang.SecurityManager getSecurityManager();
    public static long currentTimeMillis();
    public static long nanoTime();
    public static int identityHashCode(java.lang.Object);
    public static java.lang.String mapLibraryName(java.lang.String);
#    public static java.util.Properties getProperties();
#    public static void setProperties(java.util.Properties);
#    public static java.lang.String getProperty(java.lang.String);
#    public static java.lang.String getProperty(java.lang.String, java.lang.String);
#    public static java.lang.String getenv(java.lang.String);
#    public static java.util.Map getenv();
}

-assumenosideeffects public class java.lang.Thread {
    public static java.lang.Thread currentThread();
    public static boolean holdsLock(java.lang.Object);
    public static java.util.Map getAllStackTraces();
    public static java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler();
    public boolean isInterrupted();
    public final boolean isAlive();
    public final int getPriority();
    public final java.lang.String getName();
    public final java.lang.ThreadGroup getThreadGroup();
    public final boolean isDaemon();
#    public static boolean interrupted();
#    public static int activeCount();
#    protected java.lang.Object clone();
#    public int countStackFrames();
#    public java.lang.String toString();
#    public java.lang.ClassLoader getContextClassLoader();
#    public java.lang.StackTraceElement[] getStackTrace();
#    public long getId();
#    public java.lang.Thread$State getState();
#    public java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler();
}

-assumenosideeffects public class java.lang.ThreadGroup {
    public final java.lang.String getName();
    public final java.lang.ThreadGroup getParent();
    public final int getMaxPriority();
    public final boolean isDaemon();
    public final boolean parentOf(java.lang.ThreadGroup);
#    public synchronized boolean isDestroyed();
#    public int activeCount();
#    public int activeGroupCount();
#    public java.lang.String toString();
}

-assumenosideeffects public final class java.lang.String {
    public static java.lang.String format(java.lang.String,java.lang.Object[]);
    public static java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[]);
    public static java.lang.String valueOf(java.lang.Object);
    public static java.lang.String valueOf(char[]);
    public static java.lang.String valueOf(char[],int,int);
    public static java.lang.String copyValueOf(char[],int,int);
    public static java.lang.String copyValueOf(char[]);
    public static java.lang.String valueOf(boolean);
    public static java.lang.String valueOf(char);
    public static java.lang.String valueOf(int);
    public static java.lang.String valueOf(long);
    public static java.lang.String valueOf(float);
    public static java.lang.String valueOf(double);
    public int length();
    public boolean isEmpty();
    public char charAt(int);
    public int codePointAt(int);
    public int codePointBefore(int);
    public int codePointCount(int,int);
    public int offsetByCodePoints(int,int);
    public byte[] getBytes(java.lang.String);
    public byte[] getBytes(java.nio.charset.Charset);
    public byte[] getBytes();
    public boolean contentEquals(java.lang.StringBuffer);
    public boolean equalsIgnoreCase(java.lang.String);
    public int compareTo(java.lang.String);
    public int compareToIgnoreCase(java.lang.String);
    public boolean regionMatches(int,java.lang.String,int,int);
    public boolean regionMatches(boolean,int,java.lang.String,int,int);
    public boolean startsWith(java.lang.String,int);
    public boolean startsWith(java.lang.String);
    public boolean endsWith(java.lang.String);
    public int indexOf(int);
    public int indexOf(int,int);
    public int lastIndexOf(int);
    public int lastIndexOf(int,int);
    public int indexOf(java.lang.String);
    public int indexOf(java.lang.String,int);
    public int lastIndexOf(java.lang.String);
    public int lastIndexOf(java.lang.String,int);
    public java.lang.String substring(int);
    public java.lang.String substring(int,int);
    public java.lang.CharSequence subSequence(int,int);
    public java.lang.String concat(java.lang.String);
    public java.lang.String replace(char,char);
    public boolean matches(java.lang.String);
    public java.lang.String replaceFirst(java.lang.String,java.lang.String);
    public java.lang.String replaceAll(java.lang.String,java.lang.String);
    public java.lang.String[] split(java.lang.String,int);
    public java.lang.String[] split(java.lang.String);
    public java.lang.String toLowerCase(java.util.Locale);
    public java.lang.String toLowerCase();
    public java.lang.String toUpperCase(java.util.Locale);
    public java.lang.String toUpperCase();
    public java.lang.String trim();
    public char[] toCharArray();
#    public void getChars(int, int, char[], int);
#    public void getBytes(int, int, byte[], int);
#    public boolean equals(java.lang.Object);
#    public boolean contentEquals(java.lang.CharSequence);
#    public int hashCode();
#    public boolean contains(java.lang.CharSequence);
#    public java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence);
#    public java.lang.String toString();
#    public int compareTo(java.lang.Object);
}

-assumenosideeffects abstract class java.lang.AbstractStringBuilder {
    public int length();
    public int capacity();
    public char charAt(int);
    public int codePointAt(int);
    public int codePointBefore(int);
    public int codePointCount(int,int);
    public int offsetByCodePoints(int,int);
    public java.lang.String substring(int);
    public java.lang.CharSequence subSequence(int,int);
    public java.lang.String substring(int,int);
    public int indexOf(java.lang.String);
    public int indexOf(java.lang.String,int);
    public int lastIndexOf(java.lang.String);
    public int lastIndexOf(java.lang.String,int);
#    public void getChars(int, int, char[], int);
#    public abstract java.lang.String toString();
}

-assumenosideeffects public final class java.lang.StringBuffer {
    public int length();
    public int capacity();
    public char charAt(int);
    public int codePointAt(int);
    public int codePointBefore(int);
    public int codePointCount(int,int);
    public int offsetByCodePoints(int,int);
    public java.lang.String substring(int);
    public java.lang.CharSequence subSequence(int,int);
    public java.lang.String substring(int,int);
    public int indexOf(java.lang.String);
    public int indexOf(java.lang.String,int);
    public int lastIndexOf(java.lang.String);
    public int lastIndexOf(java.lang.String,int);
#    public void getChars(int, int, char[], int);
#    public java.lang.String toString();
}

-assumenosideeffects public final class java.lang.StringBuilder {
    public int indexOf(java.lang.String);
    public int indexOf(java.lang.String,int);
    public int lastIndexOf(java.lang.String);
    public int lastIndexOf(java.lang.String,int);
    public java.lang.String substring(int,int);
    public java.lang.CharSequence subSequence(int,int);
    public java.lang.String substring(int);
    public int offsetByCodePoints(int,int);
    public int codePointCount(int,int);
    public int codePointBefore(int);
    public int codePointAt(int);
    public char charAt(int);
    public int capacity();
    public int length();
#    public java.lang.String toString();
#    public void getChars(int, int, char[], int);
}

-assumenosideeffects public class android.app.Activity {
    public android.content.pm.PackageManager getPackageManager();
    public java.lang.String getPackageName();
}

-assumenosideeffects public class android.content.Context {
    public abstract android.content.res.Resources getResources();
}

-assumenosideeffects class java.lang.invoke.StringConcatFactory {
    java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[]);
    java.lang.invoke.CallSite makeConcat(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType);
}

-assumenoexternalsideeffects public class java.lang.Object {
    public <init>();
}

-assumenoexternalsideeffects public final class java.lang.Boolean {
    public <init>(boolean);
    public <init>(java.lang.String);
}

-assumenoexternalsideeffects public final class java.lang.Byte {
    public <init>(byte);
#    public java.lang.Byte(java.lang.String);
}

-assumenoexternalsideeffects public final class java.lang.Character {
    public <init>(char);
}

-assumenoexternalsideeffects public final class java.lang.Double {
    public <init>(double);
#    public java.lang.Double(java.lang.String);
}

-assumenoexternalsideeffects public final class java.lang.Float {
    public <init>(float);
    public <init>(double);
#    public java.lang.Float(java.lang.String);
}

-assumenoexternalsideeffects public final class java.lang.Integer {
    public <init>(int);
#    public java.lang.Integer(java.lang.String);
}

-assumenoexternalsideeffects public final class java.lang.Long {
    public <init>(long);
#    public java.lang.Long(java.lang.String);
}

-assumenoexternalsideeffects public abstract class java.lang.Number {
    public <init>();
}

# -assumenosideeffects public abstract class java.lang.Number {
#    public abstract int intValue();
#    public abstract long longValue();
#   public abstract float floatValue();
#   public abstract double doubleValue();
#    public byte byteValue();
#    public short shortValue();
# }
-assumenoexternalsideeffects public final class java.lang.Short {
    public <init>(short);
#    public java.lang.Short(java.lang.String);
}

# -assumenexternalosideeffects public final class java.lang.Void {
# }
# 
# -assumenosideeffects public final class java.lang.Void {
# }
-assumenoexternalsideeffects public abstract class java.lang.Enum {
    protected <init>(java.lang.String,int);
}

-assumenoexternalsideeffects public class java.lang.Throwable {
    public <init>();
    public <init>(java.lang.String);
    public <init>(java.lang.String,java.lang.Throwable);
    public <init>(java.lang.Throwable);
#    public synchronized java.lang.Throwable initCause(java.lang.Throwable);
#    public synchronized java.lang.Throwable fillInStackTrace();
#    public void setStackTrace(java.lang.StackTraceElement[]);
}

# -assumenosideeffects public class java.lang.Throwable {
#    public java.lang.String getMessage();
#    public java.lang.String getLocalizedMessage();
#    public java.lang.Throwable getCause();
#    public java.lang.String toString();
#    public java.lang.StackTraceElement[] getStackTrace();
# }
-assumenoexternalsideeffects public class java.lang.Error {
    public <init>();
    public <init>(java.lang.String);
    public <init>(java.lang.String,java.lang.Throwable);
    public <init>(java.lang.Throwable);
}

-assumenoexternalsideeffects public class java.lang.Exception {
    public <init>();
    public <init>(java.lang.String);
    public <init>(java.lang.String,java.lang.Throwable);
    public <init>(java.lang.Throwable);
}

-assumenoexternalsideeffects public final class java.lang.Class

-assumenoexternalsideeffects public abstract class java.lang.ClassLoader {
    protected <init>(java.lang.ClassLoader);
    protected <init>();
#    public synchronized void setDefaultAssertionStatus(boolean);
#    public synchronized void setPackageAssertionStatus(java.lang.String, boolean);
#    public synchronized void setClassAssertionStatus(java.lang.String, boolean);
#    public synchronized void clearAssertionStatus();
}

-assumenoexternalsideeffects public class java.lang.InheritableThreadLocal {
    public <init>();
}

-assumenoexternalsideeffects public abstract class java.lang.Process {
    public <init>();
}

# -assumenosideeffects public abstract class java.lang.Process {
#    public abstract java.io.OutputStream getOutputStream();
#    public abstract java.io.InputStream getInputStream();
#    public abstract java.io.InputStream getErrorStream();
#    public abstract int exitValue();
#    public abstract void destroy();
# }
-assumenoexternalsideeffects public final class java.lang.ProcessBuilder {
    public <init>(java.util.List);
    public <init>(java.lang.String[]);
    public java.lang.ProcessBuilder command(java.util.List);
    public java.lang.ProcessBuilder command(java.lang.String[]);
    public java.lang.ProcessBuilder directory(java.io.File);
    public java.lang.ProcessBuilder redirectErrorStream(boolean);
}

-assumenoexternalsideeffects public final class java.lang.RuntimePermission {
    public <init>(java.lang.String);
    public <init>(java.lang.String,java.lang.String);
}

-assumenoexternalsideeffects public class java.lang.SecurityManager {
    public <init>();
}

# -assumenosideeffects public class java.lang.SecurityManager {
#    protected java.lang.Class[] getClassContext();
#    protected java.lang.ClassLoader currentClassLoader();
#    protected java.lang.Class currentLoadedClass();
#    protected int classDepth(java.lang.String);
#    protected int classLoaderDepth();
#    protected boolean inClass(java.lang.String);
#    protected boolean inClassLoader();
#    public java.lang.Object getSecurityContext();
#    public void checkPermission(java.security.Permission);
#    public void checkPermission(java.security.Permission, java.lang.Object);
#    public void checkCreateClassLoader();
#    public void checkAccess(java.lang.Thread);
#    public void checkAccess(java.lang.ThreadGroup);
#    public void checkExit(int);
#    public void checkExec(java.lang.String);
#    public void checkLink(java.lang.String);
#    public void checkRead(java.io.FileDescriptor);
#    public void checkRead(java.lang.String);
#    public void checkRead(java.lang.String, java.lang.Object);
#    public void checkWrite(java.io.FileDescriptor);
#    public void checkWrite(java.lang.String);
#    public void checkDelete(java.lang.String);
#    public void checkConnect(java.lang.String, int);
#    public void checkConnect(java.lang.String, int, java.lang.Object);
#    public void checkListen(int);
#    public void checkAccept(java.lang.String, int);
#    public void checkMulticast(java.net.InetAddress);
#    public void checkMulticast(java.net.InetAddress, byte);
#    public void checkPropertiesAccess();
#    public void checkPropertyAccess(java.lang.String);
#    public boolean checkTopLevelWindow(java.lang.Object);
#    public void checkPrintJobAccess();
#    public void checkSystemClipboardAccess();
#    public void checkAwtEventQueueAccess();
#    public void checkPackageAccess(java.lang.String);
#    public void checkPackageDefinition(java.lang.String);
#    public void checkSetFactory();
#    public void checkMemberAccess(java.lang.Class, int);
#    public void checkSecurityAccess(java.lang.String);
#    public java.lang.ThreadGroup getThreadGroup();
# }
-assumenoexternalsideeffects public final class java.lang.StackTraceElement {
    public <init>(java.lang.String,java.lang.String,java.lang.String,int);
}

-assumenoexternalsideeffects public class java.lang.Thread {
    public <init>();
    public <init>(java.lang.Runnable);
    public <init>(java.lang.ThreadGroup,java.lang.Runnable);
    public <init>(java.lang.String);
    public <init>(java.lang.ThreadGroup,java.lang.String);
    public <init>(java.lang.Runnable,java.lang.String);
    public <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String);
    public <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long);
    public final void setPriority(int);
    public final void setName(java.lang.String);
    public final void setDaemon(boolean);
#    public void setContextClassLoader(java.lang.ClassLoader);
#    public void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler);
}

-assumenoexternalsideeffects public class java.lang.ThreadDeath {
    public <init>();
}

-assumenoexternalsideeffects public class java.lang.ThreadGroup {
    public <init>(java.lang.String);
    public <init>(java.lang.ThreadGroup,java.lang.String);
    public final void setDaemon(boolean);
    public final void setMaxPriority(int);
#    public void uncaughtException(java.lang.Thread, java.lang.Throwable);
#    public boolean allowThreadSuspension(boolean);
}

-assumenoexternalsideeffects public class java.lang.ThreadLocal {
    public <init>();
}

# -assumenosideeffects public class java.lang.ThreadLocal {
#    protected java.lang.Object initialValue();
#    public java.lang.Object get();
#    public void remove();
# }
# -assumenoexternalsideeffects public class java.lang.ThreadLocal {
#    public void set(java.lang.Object);
# }
-assumenoexternalsideeffects public final class java.lang.String {
    public <init>();
    public <init>(java.lang.String);
    public <init>(char[]);
    public <init>(char[],int,int);
    public <init>(int[],int,int);
    public <init>(byte[],int,int,int);
    public <init>(byte[],int);
    public <init>(byte[],int,int,java.lang.String);
    public <init>(byte[],java.lang.String);
    public <init>(byte[],int,int);
    public <init>(byte[]);
    public <init>(java.lang.StringBuffer);
    public <init>(java.lang.StringBuilder);
    public java.lang.String intern();
#    public java.lang.String(byte[], int, int, java.nio.charset.Charset);
#    public java.lang.String(byte[], java.nio.charset.Charset);
}

-assumenoexternalsideeffects abstract class java.lang.AbstractStringBuilder {
    public void ensureCapacity(int);
    public void trimToSize();
    public void setLength(int);
    public void setCharAt(int,char);
    public java.lang.AbstractStringBuilder append(java.lang.Object);
    public java.lang.AbstractStringBuilder append(java.lang.String);
    public java.lang.AbstractStringBuilder append(java.lang.StringBuffer);
    public java.lang.AbstractStringBuilder append(char[]);
    public java.lang.AbstractStringBuilder append(char[],int,int);
    public java.lang.AbstractStringBuilder append(boolean);
    public java.lang.AbstractStringBuilder append(char);
    public java.lang.AbstractStringBuilder append(int);
    public java.lang.AbstractStringBuilder append(long);
    public java.lang.AbstractStringBuilder append(float);
    public java.lang.AbstractStringBuilder append(double);
    public java.lang.AbstractStringBuilder delete(int,int);
    public java.lang.AbstractStringBuilder appendCodePoint(int);
    public java.lang.AbstractStringBuilder deleteCharAt(int);
    public java.lang.AbstractStringBuilder replace(int,int,java.lang.String);
    public java.lang.AbstractStringBuilder insert(int,char[],int,int);
    public java.lang.AbstractStringBuilder insert(int,java.lang.Object);
    public java.lang.AbstractStringBuilder insert(int,java.lang.String);
    public java.lang.AbstractStringBuilder insert(int,char[]);
    public java.lang.AbstractStringBuilder insert(int,boolean);
    public java.lang.AbstractStringBuilder insert(int,char);
    public java.lang.AbstractStringBuilder insert(int,int);
    public java.lang.AbstractStringBuilder insert(int,long);
    public java.lang.AbstractStringBuilder insert(int,float);
    public java.lang.AbstractStringBuilder insert(int,double);
    public java.lang.AbstractStringBuilder reverse();
#    public java.lang.AbstractStringBuilder append(java.lang.CharSequence);
#    public java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence);
#    public java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int);
#    public java.lang.Appendable append(char);
#    public java.lang.Appendable append(java.lang.CharSequence, int, int);
#    public java.lang.Appendable append(java.lang.CharSequence);
}

-assumenoexternalsideeffects public final class java.lang.StringBuffer {
    public <init>();
    public <init>(int);
    public <init>(java.lang.String);
    public void ensureCapacity(int);
    public void trimToSize();
    public void setLength(int);
    public void setCharAt(int,char);
    public java.lang.StringBuffer append(java.lang.Object);
    public java.lang.StringBuffer append(java.lang.String);
    public java.lang.StringBuffer append(java.lang.StringBuffer);
    public java.lang.StringBuffer append(char[]);
    public java.lang.StringBuffer append(char[],int,int);
    public java.lang.StringBuffer append(boolean);
    public java.lang.StringBuffer append(char);
    public java.lang.StringBuffer append(int);
    public java.lang.StringBuffer appendCodePoint(int);
    public java.lang.StringBuffer append(long);
    public java.lang.StringBuffer append(float);
    public java.lang.StringBuffer append(double);
    public java.lang.StringBuffer delete(int,int);
    public java.lang.StringBuffer deleteCharAt(int);
    public java.lang.StringBuffer replace(int,int,java.lang.String);
    public java.lang.StringBuffer insert(int,char[],int,int);
    public java.lang.StringBuffer insert(int,java.lang.Object);
    public java.lang.StringBuffer insert(int,java.lang.String);
    public java.lang.StringBuffer insert(int,char[]);
    public java.lang.StringBuffer insert(int,boolean);
    public java.lang.StringBuffer insert(int,char);
    public java.lang.StringBuffer insert(int,int);
    public java.lang.StringBuffer insert(int,long);
    public java.lang.StringBuffer insert(int,float);
    public java.lang.StringBuffer insert(int,double);
    public java.lang.StringBuffer reverse();
    public java.lang.AbstractStringBuilder reverse();
    public java.lang.AbstractStringBuilder insert(int,double);
    public java.lang.AbstractStringBuilder insert(int,float);
    public java.lang.AbstractStringBuilder insert(int,long);
    public java.lang.AbstractStringBuilder insert(int,int);
    public java.lang.AbstractStringBuilder insert(int,char);
    public java.lang.AbstractStringBuilder insert(int,boolean);
    public java.lang.AbstractStringBuilder insert(int,char[]);
    public java.lang.AbstractStringBuilder insert(int,java.lang.String);
    public java.lang.AbstractStringBuilder insert(int,java.lang.Object);
    public java.lang.AbstractStringBuilder insert(int,char[],int,int);
    public java.lang.AbstractStringBuilder replace(int,int,java.lang.String);
    public java.lang.AbstractStringBuilder deleteCharAt(int);
    public java.lang.AbstractStringBuilder appendCodePoint(int);
    public java.lang.AbstractStringBuilder delete(int,int);
    public java.lang.AbstractStringBuilder append(double);
    public java.lang.AbstractStringBuilder append(float);
    public java.lang.AbstractStringBuilder append(long);
    public java.lang.AbstractStringBuilder append(int);
    public java.lang.AbstractStringBuilder append(char);
    public java.lang.AbstractStringBuilder append(boolean);
    public java.lang.AbstractStringBuilder append(char[],int,int);
    public java.lang.AbstractStringBuilder append(char[]);
    public java.lang.AbstractStringBuilder append(java.lang.StringBuffer);
    public java.lang.AbstractStringBuilder append(java.lang.String);
    public java.lang.AbstractStringBuilder append(java.lang.Object);
#    public java.lang.StringBuffer(java.lang.CharSequence);
#    public java.lang.StringBuffer append(java.lang.CharSequence);
#    public java.lang.StringBuffer append(java.lang.CharSequence, int, int);
#    public java.lang.StringBuffer insert(int, java.lang.CharSequence);
#    public java.lang.StringBuffer insert(int, java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence);
#    public java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder append(java.lang.CharSequence);
#    public java.lang.Appendable append(char);
#    public java.lang.Appendable append(java.lang.CharSequence, int, int);
#    public java.lang.Appendable append(java.lang.CharSequence);
}

-assumenoexternalsideeffects public final class java.lang.StringBuilder {
    public <init>();
    public <init>(int);
    public <init>(java.lang.String);
    public void setCharAt(int,char);
    public void setLength(int);
    public void trimToSize();
    public void ensureCapacity(int);
    public java.lang.StringBuilder append(java.lang.Object);
    public java.lang.StringBuilder append(java.lang.String);
    public java.lang.StringBuilder append(java.lang.StringBuffer);
    public java.lang.StringBuilder append(char[]);
    public java.lang.StringBuilder append(char[],int,int);
    public java.lang.StringBuilder append(boolean);
    public java.lang.StringBuilder append(char);
    public java.lang.StringBuilder append(int);
    public java.lang.StringBuilder append(long);
    public java.lang.StringBuilder append(float);
    public java.lang.StringBuilder append(double);
    public java.lang.StringBuilder appendCodePoint(int);
    public java.lang.StringBuilder delete(int,int);
    public java.lang.StringBuilder deleteCharAt(int);
    public java.lang.StringBuilder replace(int,int,java.lang.String);
    public java.lang.StringBuilder insert(int,char[],int,int);
    public java.lang.StringBuilder insert(int,java.lang.Object);
    public java.lang.StringBuilder insert(int,java.lang.String);
    public java.lang.StringBuilder insert(int,char[]);
    public java.lang.StringBuilder insert(int,boolean);
    public java.lang.StringBuilder insert(int,char);
    public java.lang.StringBuilder insert(int,int);
    public java.lang.StringBuilder insert(int,long);
    public java.lang.StringBuilder insert(int,float);
    public java.lang.StringBuilder insert(int,double);
    public java.lang.StringBuilder reverse();
    public java.lang.AbstractStringBuilder reverse();
    public java.lang.AbstractStringBuilder insert(int,double);
    public java.lang.AbstractStringBuilder insert(int,float);
    public java.lang.AbstractStringBuilder insert(int,long);
    public java.lang.AbstractStringBuilder insert(int,int);
    public java.lang.AbstractStringBuilder insert(int,char);
    public java.lang.AbstractStringBuilder insert(int,boolean);
    public java.lang.AbstractStringBuilder insert(int,char[]);
    public java.lang.AbstractStringBuilder insert(int,java.lang.String);
    public java.lang.AbstractStringBuilder insert(int,java.lang.Object);
    public java.lang.AbstractStringBuilder insert(int,char[],int,int);
    public java.lang.AbstractStringBuilder replace(int,int,java.lang.String);
    public java.lang.AbstractStringBuilder deleteCharAt(int);
    public java.lang.AbstractStringBuilder appendCodePoint(int);
    public java.lang.AbstractStringBuilder delete(int,int);
    public java.lang.AbstractStringBuilder append(double);
    public java.lang.AbstractStringBuilder append(float);
    public java.lang.AbstractStringBuilder append(long);
    public java.lang.AbstractStringBuilder append(int);
    public java.lang.AbstractStringBuilder append(char);
    public java.lang.AbstractStringBuilder append(boolean);
    public java.lang.AbstractStringBuilder append(char[],int,int);
    public java.lang.AbstractStringBuilder append(char[]);
    public java.lang.AbstractStringBuilder append(java.lang.StringBuffer);
    public java.lang.AbstractStringBuilder append(java.lang.String);
    public java.lang.AbstractStringBuilder append(java.lang.Object);
#    public java.lang.StringBuilder(java.lang.CharSequence);
#    public java.lang.StringBuilder append(java.lang.CharSequence);
#    public java.lang.StringBuilder append(java.lang.CharSequence, int, int);
#    public java.lang.StringBuilder insert(int, java.lang.CharSequence);
#    public java.lang.StringBuilder insert(int, java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence);
#    public java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder append(java.lang.CharSequence);
#    public java.lang.Appendable append(char);
#    public java.lang.Appendable append(java.lang.CharSequence, int, int);
#    public java.lang.Appendable append(java.lang.CharSequence);
}

-assumenoexternalreturnvalues abstract class java.lang.AbstractStringBuilder {
    public java.lang.AbstractStringBuilder append(java.lang.Object);
    public java.lang.AbstractStringBuilder append(java.lang.String);
    public java.lang.AbstractStringBuilder append(java.lang.StringBuffer);
    public java.lang.AbstractStringBuilder append(char[]);
    public java.lang.AbstractStringBuilder append(char[],int,int);
    public java.lang.AbstractStringBuilder append(boolean);
    public java.lang.AbstractStringBuilder append(char);
    public java.lang.AbstractStringBuilder append(int);
    public java.lang.AbstractStringBuilder append(long);
    public java.lang.AbstractStringBuilder append(float);
    public java.lang.AbstractStringBuilder append(double);
    public java.lang.AbstractStringBuilder delete(int,int);
    public java.lang.AbstractStringBuilder appendCodePoint(int);
    public java.lang.AbstractStringBuilder deleteCharAt(int);
    public java.lang.AbstractStringBuilder replace(int,int,java.lang.String);
    public java.lang.AbstractStringBuilder insert(int,char[],int,int);
    public java.lang.AbstractStringBuilder insert(int,java.lang.Object);
    public java.lang.AbstractStringBuilder insert(int,java.lang.String);
    public java.lang.AbstractStringBuilder insert(int,char[]);
    public java.lang.AbstractStringBuilder insert(int,boolean);
    public java.lang.AbstractStringBuilder insert(int,char);
    public java.lang.AbstractStringBuilder insert(int,int);
    public java.lang.AbstractStringBuilder insert(int,long);
    public java.lang.AbstractStringBuilder insert(int,float);
    public java.lang.AbstractStringBuilder insert(int,double);
    public java.lang.AbstractStringBuilder reverse();
#    public java.lang.AbstractStringBuilder append(java.lang.CharSequence);
#    public java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence);
#    public java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int);
}

-assumenoexternalreturnvalues public final class java.lang.StringBuffer {
    public java.lang.StringBuffer append(java.lang.Object);
    public java.lang.StringBuffer append(java.lang.String);
    public java.lang.StringBuffer append(java.lang.StringBuffer);
    public java.lang.StringBuffer append(char[]);
    public java.lang.StringBuffer append(char[],int,int);
    public java.lang.StringBuffer append(boolean);
    public java.lang.StringBuffer append(char);
    public java.lang.StringBuffer append(int);
    public java.lang.StringBuffer appendCodePoint(int);
    public java.lang.StringBuffer append(long);
    public java.lang.StringBuffer append(float);
    public java.lang.StringBuffer append(double);
    public java.lang.StringBuffer delete(int,int);
    public java.lang.StringBuffer deleteCharAt(int);
    public java.lang.StringBuffer replace(int,int,java.lang.String);
    public java.lang.StringBuffer insert(int,char[],int,int);
    public java.lang.StringBuffer insert(int,java.lang.Object);
    public java.lang.StringBuffer insert(int,java.lang.String);
    public java.lang.StringBuffer insert(int,char[]);
    public java.lang.StringBuffer insert(int,boolean);
    public java.lang.StringBuffer insert(int,char);
    public java.lang.StringBuffer insert(int,int);
    public java.lang.StringBuffer insert(int,long);
    public java.lang.StringBuffer insert(int,float);
    public java.lang.StringBuffer insert(int,double);
    public java.lang.StringBuffer reverse();
    public java.lang.AbstractStringBuilder reverse();
    public java.lang.AbstractStringBuilder insert(int,double);
    public java.lang.AbstractStringBuilder insert(int,float);
    public java.lang.AbstractStringBuilder insert(int,long);
    public java.lang.AbstractStringBuilder insert(int,int);
    public java.lang.AbstractStringBuilder insert(int,char);
    public java.lang.AbstractStringBuilder insert(int,boolean);
    public java.lang.AbstractStringBuilder insert(int,char[]);
    public java.lang.AbstractStringBuilder insert(int,java.lang.String);
    public java.lang.AbstractStringBuilder insert(int,java.lang.Object);
    public java.lang.AbstractStringBuilder insert(int,char[],int,int);
    public java.lang.AbstractStringBuilder replace(int,int,java.lang.String);
    public java.lang.AbstractStringBuilder deleteCharAt(int);
    public java.lang.AbstractStringBuilder appendCodePoint(int);
    public java.lang.AbstractStringBuilder delete(int,int);
    public java.lang.AbstractStringBuilder append(double);
    public java.lang.AbstractStringBuilder append(float);
    public java.lang.AbstractStringBuilder append(long);
    public java.lang.AbstractStringBuilder append(int);
    public java.lang.AbstractStringBuilder append(char);
    public java.lang.AbstractStringBuilder append(boolean);
    public java.lang.AbstractStringBuilder append(char[],int,int);
    public java.lang.AbstractStringBuilder append(char[]);
    public java.lang.AbstractStringBuilder append(java.lang.StringBuffer);
    public java.lang.AbstractStringBuilder append(java.lang.String);
    public java.lang.AbstractStringBuilder append(java.lang.Object);
#    public java.lang.StringBuffer append(java.lang.CharSequence);
#    public java.lang.StringBuffer append(java.lang.CharSequence, int, int);
#    public java.lang.StringBuffer insert(int, java.lang.CharSequence);
#    public java.lang.StringBuffer insert(int, java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence);
#    public java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder append(java.lang.CharSequence);
#    public java.lang.Appendable append(char);
#    public java.lang.Appendable append(java.lang.CharSequence, int, int);
#    public java.lang.Appendable append(java.lang.CharSequence);
}

-assumenoexternalreturnvalues public final class java.lang.StringBuilder {
    public java.lang.StringBuilder append(java.lang.Object);
    public java.lang.StringBuilder append(java.lang.String);
    public java.lang.StringBuilder append(java.lang.StringBuffer);
    public java.lang.StringBuilder append(char[]);
    public java.lang.StringBuilder append(char[],int,int);
    public java.lang.StringBuilder append(boolean);
    public java.lang.StringBuilder append(char);
    public java.lang.StringBuilder append(int);
    public java.lang.StringBuilder append(long);
    public java.lang.StringBuilder append(float);
    public java.lang.StringBuilder append(double);
    public java.lang.StringBuilder appendCodePoint(int);
    public java.lang.StringBuilder delete(int,int);
    public java.lang.StringBuilder deleteCharAt(int);
    public java.lang.StringBuilder replace(int,int,java.lang.String);
    public java.lang.StringBuilder insert(int,char[],int,int);
    public java.lang.StringBuilder insert(int,java.lang.Object);
    public java.lang.StringBuilder insert(int,java.lang.String);
    public java.lang.StringBuilder insert(int,char[]);
    public java.lang.StringBuilder insert(int,boolean);
    public java.lang.StringBuilder insert(int,char);
    public java.lang.StringBuilder insert(int,int);
    public java.lang.StringBuilder insert(int,long);
    public java.lang.StringBuilder insert(int,float);
    public java.lang.StringBuilder insert(int,double);
    public java.lang.StringBuilder reverse();
    public java.lang.AbstractStringBuilder reverse();
    public java.lang.AbstractStringBuilder insert(int,double);
    public java.lang.AbstractStringBuilder insert(int,float);
    public java.lang.AbstractStringBuilder insert(int,long);
    public java.lang.AbstractStringBuilder insert(int,int);
    public java.lang.AbstractStringBuilder insert(int,char);
    public java.lang.AbstractStringBuilder insert(int,boolean);
    public java.lang.AbstractStringBuilder insert(int,char[]);
    public java.lang.AbstractStringBuilder insert(int,java.lang.String);
    public java.lang.AbstractStringBuilder insert(int,java.lang.Object);
    public java.lang.AbstractStringBuilder insert(int,char[],int,int);
    public java.lang.AbstractStringBuilder replace(int,int,java.lang.String);
    public java.lang.AbstractStringBuilder deleteCharAt(int);
    public java.lang.AbstractStringBuilder appendCodePoint(int);
    public java.lang.AbstractStringBuilder delete(int,int);
    public java.lang.AbstractStringBuilder append(double);
    public java.lang.AbstractStringBuilder append(float);
    public java.lang.AbstractStringBuilder append(long);
    public java.lang.AbstractStringBuilder append(int);
    public java.lang.AbstractStringBuilder append(char);
    public java.lang.AbstractStringBuilder append(boolean);
    public java.lang.AbstractStringBuilder append(char[],int,int);
    public java.lang.AbstractStringBuilder append(char[]);
    public java.lang.AbstractStringBuilder append(java.lang.StringBuffer);
    public java.lang.AbstractStringBuilder append(java.lang.String);
    public java.lang.AbstractStringBuilder append(java.lang.Object);
#    public java.lang.StringBuilder append(java.lang.CharSequence);
#    public java.lang.StringBuilder append(java.lang.CharSequence, int, int);
#    public java.lang.StringBuilder insert(int, java.lang.CharSequence);
#    public java.lang.StringBuilder insert(int, java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence);
#    public java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int);
#    public java.lang.AbstractStringBuilder append(java.lang.CharSequence);
#    public java.lang.Appendable append(char);
#    public java.lang.Appendable append(java.lang.CharSequence, int, int);
#    public java.lang.Appendable append(java.lang.CharSequence);
}

-assumevalues class com.guardsquare.dexguard.runtime.threatcast.** {
    private static boolean USE_SSL_PINNING = true;}
-malwareprotect overlays
-malwaremessage overlays string/overlays_message
-raspflags certificatetamper 1
-intermediatedirectory, allowoverwrite /Users/muhammad.alfauzan/Development/Dicoding/app/build/outputs/dexguard/bitguard/apk/release
